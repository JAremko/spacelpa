(1 (diminish . [(20170419 1036) nil "Diminished modes are minor modes with no modeline display" single ((:commit . "565a983a39d2e2cffab5df13b34f3b6116723208") (:url . "https://github.com/myrjola/diminish.el") (:keywords "extensions" "diminish" "minor" "codeprose"))]) (bind-key . [(20161218 1520) nil "A simple way to manage personal keybindings" single ((:commit . "cb89901b52a9413b6c233d7fbb616a2d8f38b50a") (:url . "https://github.com/jwiegley/use-package") (:keywords "keys" "keybinding" "config" "dotemacs"))]) (use-package . [(20171013 1548) ((bind-key (1 0)) (diminish (0 44))) "A use-package declaration for simplifying your .emacs" single ((:commit . "cb89901b52a9413b6c233d7fbb616a2d8f38b50a") (:url . "https://github.com/jwiegley/use-package") (:keywords "dotemacs" "startup" "speed" "config" "package"))]) (which-key . [(20170817 1107) ((emacs (24 4))) "Display available keybindings in popup" single ((:commit . "6d2e17c949ff7bfebfe0b0878a93d94b31585031") (:url . "https://github.com/justbur/emacs-which-key"))]) (fill-column-indicator . [(20170905 1008) nil "Graphically indicate the fill column" single ((:commit . "23ad25f2c2fddd32a1ea12a9e0f631e243e6a779") (:keywords "convenience"))]) (hl-todo . [(20170621 1257) nil "highlight TODO and similar keywords" single ((:commit . "961db3116f1396dc4f903e3a59824a40e0bbb6a2") (:url . "https://github.com/tarsius/hl-todo") (:keywords "convenience"))]) (eyebrowse . [(20170318 1418) ((dash (2 7 0)) (emacs (24 3 1))) "Easy window config switching" single ((:commit . "56af9e96cfc8c03cfdcf3a60b581a8db9fdcbb20") (:url . "https://github.com/wasamasa/eyebrowse") (:keywords "convenience"))]) (helm-purpose . [(20170114 836) ((emacs (24)) (helm (1 9 2)) (window-purpose (1 4))) "Helm Interface for Purpose" single ((:commit . "9ff4c21c1e9ebc7afb851b738f815df7343bb287") (:url . "https://github.com/bmag/helm-purpose"))]) (ivy-purpose . [(20160724 303) ((emacs (24)) (ivy (0 8)) (window-purpose (1 5))) "Ivy Interface for Purpose" single ((:commit . "0495f2f3aed64d7e0028125e76a9a68f8fc4107e") (:url . "https://github.com/bmag/ivy-purpose"))]) (window-purpose . [(20171018 821) ((emacs (24)) (cl-lib (0 5)) (let-alist (1 0 3)) (imenu-list (0 1))) "Purpose-based window management for Emacs" tar ((:commit . "2b8059256a90caf578ca5ba62205ca7f0d67a740") (:url . "https://github.com/bmag/emacs-purpose") (:keywords "frames"))]) (ace-link . [(20170925 723) ((avy (0 2 0))) "Quickly follow links" single ((:commit . "eee81e6f75b078a207a547e0e8cff8c3d4f0b07c") (:url . "https://github.com/abo-abo/ace-link") (:keywords "convenience" "links"))]) (auto-highlight-symbol . [(20130313 243) nil "Automatic highlighting current symbol minor mode" single ((:commit . "26573de912d760e04321b350897aea70958cee8b") (:url . "http://github.com/gennad/auto-highlight-symbol/raw/master/auto-highlight-symbol.el") (:keywords "highlight" "face" "match" "convenience"))]) (flx-ido . [(20151030 1112) ((flx (0 1)) (cl-lib (0 3))) "flx integration for ido" single ((:commit . "ae0981b253b17b52dec666e2f739f889e7952291") (:url . "https://github.com/lewang/flx"))]) (golden-ratio . [(20150819 420) nil "Automatic resizing of Emacs windows to the golden ratio" single ((:commit . "72b028808b41d23fa3f7e8c0d23d2c475e7b46ae") (:keywords "window" "resizing"))]) (info+ . [(20170923 1929) nil "Extensions to `info.el'." single ((:url . "https://www.emacswiki.org/emacs/download/info%2b.el") (:keywords "help" "docs" "internal"))]) (open-junk-file . [(20161210 314) nil "Open a junk (memo) file to try-and-error" single ((:commit . "558bec7372b0fed4c4cb6074ab906535fae615bd") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/open-junk-file.el") (:keywords "convenience" "tools"))]) (paradox . [(20161117 502) ((emacs (24 4)) (seq (1 7)) (let-alist (1 0 3)) (spinner (1 7 3)) (hydra (0 13 2))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar ((:commit . "dfdfbec8b4a3b71966c134f00c3f5edfa87b6245") (:url . "https://github.com/Malabarba/paradox") (:keywords "package" "packages"))]) (restart-emacs . [(20170609 905) nil "Restart emacs from within emacs" single ((:commit . "98aa4efd2caeaf0f42ca385c24fa14a843b271b7") (:url . "https://github.com/iqbalansari/restart-emacs") (:keywords "convenience"))]) (winum . [(20171028 702) ((cl-lib (0 5)) (dash (2 13 0))) "Navigate windows and frames using numbers." single ((:commit . "c56d1cdb8d1723eb4c0d7a7eb3ecd2697739146c") (:url . "http://github.com/deb0ch/winum.el") (:keywords "convenience" "frames" "windows" "multi-screen"))]) (fancy-battery . [(20150101 404) ((emacs (24 1))) "Fancy battery display" single ((:commit . "9b88ae77a01aa3edc529840338bcb2db7f445822") (:url . "https://github.com/lunaryorn/fancy-battery.el") (:keywords "convenience" "tools" "hardware"))]) (spaceline . [(20171016 157) ((emacs (24 4)) (cl-lib (0 5)) (powerline (2 3)) (dash (2 11 0)) (s (1 10 0))) "Modeline configuration library for powerline" tar ((:commit . "251d92ef77ed4daa798e3300e5c671052870827e") (:url . "https://github.com/TheBB/spaceline") (:keywords "mode-line" "powerline" "spacemacs"))]) (symon . [(20170224 33) nil "tiny graphical system monitor" single ((:commit . "8dd8b6df49b03cd7d31b85aedbe9dd08fb922335") (:url . "http://hins11.yu-yake.com/"))]) (dumb-jump . [(20171013 2105) ((emacs (24 3)) (f (0 17 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "jump to definition for multiple languages without configuration." single ((:commit . "e1140c3c27c0e434ecaaf748aa77f63e2289df41") (:keywords "programming"))]) (define-word . [(20171001 1616) ((emacs (24 1))) "display the definition of word at point." single ((:commit . "a425ffe44d62622b86477a622c6188a56bc2bd9a") (:url . "https://github.com/abo-abo/define-word") (:keywords "dictionary" "convenience"))]) (google-translate . [(20170713 119) nil "Emacs interface to Google Translate." tar ((:commit . "d8b84a8359fcc697114d1298840e9a45b111c974"))]) (anzu . [(20161017 907) ((emacs (24 3))) "Show number of matches in mode-line while searching" single ((:commit . "e6c56ca8b23ac433f7be58b6f3f50801dd4164e4") (:url . "https://github.com/syohex/emacs-anzu"))]) (evil-anzu . [(20170123 2318) ((evil (1 0 0)) (anzu (0 46))) "anzu for evil-mode" single ((:commit . "9bca6ca14d865e7e005bc02a28a09b4ae74facc9") (:url . "https://github.com/syohex/emacs-evil-anzu"))]) (evil-args . [(20140329 1429) ((evil (1 0 8))) "Motions and text objects for delimited arguments in Evil." single ((:commit . "2a88b4d19953a11227cc1e91973b92149116f44c") (:url . "http://github.com/wcsmith/evil-args") (:keywords "evil" "vim-emulation"))]) (evil-ediff . [(20170724 1223) ((evil (1 2 3))) "Make ediff a little evil" single ((:commit . "67b0e69f65c196eff5b39dacb7a9ec05bb919c74") (:url . "https://github.com/justbur/evil-ediff"))]) (evil-exchange . [(20170510 1959) ((evil (1 2 8)) (cl-lib (0 3))) "Exchange text more easily within Evil" single ((:commit . "47691537815150715e64e6f6ec79be7746c96120") (:url . "http://github.com/Dewdrops/evil-exchange") (:keywords "evil" "plugin"))]) (iedit . [(20170916 1024) nil "Edit multiple regions in the same way simultaneously." tar ((:commit . "5b14cc9fcaef509c50f25cff872fba5d70b2c799") (:url . "http://www.emacswiki.org/emacs/Iedit") (:keywords "occurrence" "region" "simultaneous" "refactoring"))]) (evil-iedit-state . [(20160905 1908) ((evil (1 0 9)) (iedit (0 97))) "Evil states to interface iedit mode." single ((:commit . "02ce7ea1414aa0f139b52f1b3350c2b7af74d0ba") (:url . "https://github.com/syl20bnr/evil-iedit-state") (:keywords "convenience" "editing" "evil" "iedit" "mnemonic"))]) (evil-indent-plus . [(20151109 1106) ((evil (0)) (cl-lib (0 5))) "Evil textobjects based on indentation" single ((:commit . "0c7501e6efed661242c3a20e0a6c79a6455c2c40") (:url . "http://github.com/TheBB/evil-indent-plus") (:keywords "convenience" "evil"))]) (evil-lion . [(20170810 2314) ((emacs (24 3)) (evil (1 0 0))) "Evil align operator, port of vim-lion" single ((:commit . "aaa3874ad54c31b4322ac5bbc63e331498b11d61") (:url . "http://github.com/edkolev/evil-lion") (:keywords "emulations" "evil" "vim"))]) (bind-map . [(20161207 711) ((emacs (24 3))) "Bind personal keymaps in multiple locations" single ((:commit . "bf4181e3a41463684adfffc6c5c305b30480e30f") (:url . "https://github.com/justbur/emacs-bind-map"))]) (evil-lisp-state . [(20160403 1948) ((evil (1 0 9)) (bind-map (0)) (smartparens (1 6 1))) "An evil state to edit Lisp code" single ((:commit . "3c65fecd9917a41eaf6460f22187e2323821f3ce") (:url . "https://github.com/syl20bnr/evil-lisp-state") (:keywords "convenience" "editing" "evil" "smartparens" "lisp" "mnemonic"))]) (evil-mc . [(20170716 1806) ((emacs (24 3)) (evil (1 2 12)) (cl-lib (0 5))) "Multiple cursors for evil-mode" tar ((:commit . "8127c3161a6d990635684a020f708b7914445593") (:url . "https://github.com/gabesoft/evil-mc") (:keywords "evil" "editing" "multiple-cursors" "vim" "evil-multiple-cursors" "evil-mc" "evil-mc"))]) (evil-nerd-commenter . [(20170905 653) nil "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar ((:commit . "92bee71aa6fbb36299a4e69e710da786f3694637") (:url . "http://github.com/redguardtoo/evil-nerd-commenter") (:keywords "commenter" "vim" "line" "evil"))]) (evil-matchit . [(20170727 1741) ((evil (1 0 7))) "Vim matchit ported to Evil" tar ((:commit . "dbaae2b7537aadb2e44a8915745ee190768b4b2a") (:url . "http://github.com/redguardtoo/evil-matchit") (:keywords "matchit" "vim" "evil"))]) (evil-numbers . [(20140606 551) nil "increment/decrement numbers like in vim" single ((:commit . "6ea1c8c3a9b37bed63d48f1128e9a4910e68187e") (:url . "http://github.com/cofi/evil-numbers") (:keywords "numbers" "increment" "decrement" "octal" "hex" "binary"))]) (evil-search-highlight-persist . [(20170522 2034) ((highlight (0))) "Persistent highlights after search" single ((:commit . "979d2dec58d3b9c5ca5fdf4bb802a0209913794e"))]) (evil-surround . [(20171004 600) ((evil (1 2 12))) "emulate surround.vim from Vim" single ((:commit . "822a0f61c3fd7c55cda4e04c8590ae5144401c26") (:keywords "emulation" "vi" "evil"))]) (evil-tutor . [(20150102 2250) ((evil (1 0 9))) "Vimtutor adapted to Evil and wrapped in a major-mode" tar ((:commit . "4e124cd3911dc0d1b6817ad2c9e59b4753638f28") (:url . "https://github.com/syl20bnr/evil-tutor") (:keywords "convenience" "editing" "evil"))]) (evil-visual-mark-mode . [(20150202 1000) ((evil (1 0 9)) (dash (2 10))) "Display evil marks on buffer" single ((:commit . "094ee37599492885ff3144918fcdd9b74dadaaa0") (:keywords "evil"))]) (linum-relative . [(20160510 118) nil "display relative line number in emacs." single ((:commit . "b8a99dcfe38a491172a8193053fb7849634b43c0") (:url . "http://github.com/coldnew/linum-relative") (:keywords "converience"))]) (vi-tilde-fringe . [(20141027 1942) ((emacs (24))) "Displays tildes in the fringe on empty lines a la Vi." single ((:commit . "f1597a8d54535bb1d84b442577b2024e6f910308") (:url . "https://github.com/syl20bnr/vi-tilde-fringe") (:keywords "emulation"))]) (adaptive-wrap . [(0 5 1) nil "Smart line-wrapping with wrap-prefix" single ((:url . "http://elpa.gnu.org/packages/adaptive-wrap.html") (:keywords))]) (column-enforce-mode . [(20170103 1231) nil "Highlight text that extends beyond a  column" single ((:commit . "379366fe0a5bcb333db2d55cddcf18d6e76ab3fc") (:url . "www.github.com/jordonbiondo/column-enforce-mode"))]) (hide-comnt . [(20170223 739) nil "Hide/show comments in code." single ((:url . "https://www.emacswiki.org/emacs/download/hide-comnt.el") (:keywords "comment" "hide" "show"))]) (highlight-indentation . [(20170502 43) nil "Minor modes for highlighting indentation" single ((:commit . "5c7717a2224372f7113d13640515df3650388a37") (:url . "https://github.com/antonj/Highlight-Indentation-for-Emacs"))]) (parent-mode . [(20150824 1600) nil "get major mode's parent modes" single ((:commit . "db692cf08deff2f0e973e6e86e26662b44813d1b") (:url . "https://github.com/Fanael/parent-mode"))]) (highlight-numbers . [(20170905 342) ((emacs (24)) (parent-mode (2 0))) "Highlight numbers in source code" single ((:commit . "f952ecb7448c125d4ef82ee6ad136b25e640d74a") (:url . "https://github.com/Fanael/highlight-numbers"))]) (highlight-parentheses . [(20170809 1151) nil "highlight surrounding parentheses" single ((:commit . "c38885bba4f174c0a2cad3a60fe12b7cf8699aa1") (:url . "https://github.com/tsdh/highlight-parentheses.el") (:keywords "faces" "matching"))]) (hl-anything . [(20160422 1008) ((emacs (24 3))) "Highlight symbols, selections, enclosing parens and more." tar ((:commit . "8696bc55a8cba408f0fc83a907a9ec529d79e558"))]) (indent-guide . [(20170221 327) nil "show vertical lines to guide indentation" single ((:commit . "d64f43011c72068e008621e620009ec592b35913") (:url . "http://hins11.yu-yake.com/"))]) (rainbow-delimiters . [(20170929 432) nil "Highlight brackets according to their depth" single ((:commit . "19b93892afa0494ba749c2ca9c154e04447ad778") (:url . "https://github.com/Fanael/rainbow-delimiters") (:keywords "faces" "convenience" "lisp" "tools"))]) (volatile-highlights . [(20160611 1855) nil "Minor mode for visual feedback on some operations." single ((:commit . "9a20091f0ce7fc0a6b3e641a6a46d5f3ac4d8392") (:url . "http://www.emacswiki.org/emacs/download/volatile-highlights.el") (:keywords "emulations" "convenience" "wp"))]) (aggressive-indent . [(20171012 1107) ((emacs (24 1)) (cl-lib (0 5))) "Minor mode to aggressively keep your code always indented" single ((:commit . "1d7185d27020c3e91a7da21800716079297938ac") (:url . "https://github.com/Malabarba/aggressive-indent-mode") (:keywords "indent" "lisp" "maint" "tools"))]) (bracketed-paste . [(20160407 1648) ((emacs (24 3))) "bracketed paste mode support within emacs -nw" single ((:commit . "843ce3bbb63d560face889e13a57a2f7543957d5") (:keywords "terminals"))]) (clean-aindent-mode . [(20171017 1343) nil "Simple indent and unindent, trims indent white-space" single ((:commit . "a97bcae8f43a9ff64e95473e4ef0d8bafe829211") (:url . "https://github.com/pmarinov/clean-aindent-mode") (:keywords "indentation" "whitespace" "backspace"))]) (editorconfig . [(20171005 2129) ((cl-lib (0 5))) "EditorConfig Emacs Plugin" tar ((:commit . "99bb6882d8ac708a066a9977cc4fa23f86c6b8f6") (:url . "https://github.com/editorconfig/editorconfig-emacs#readme"))]) (expand-region . [(20170514 1309) nil "Increase selected region by semantic units." tar ((:commit . "2357f1d5efd9d5b9e37f3513342237fec2629291"))]) (hungry-delete . [(20170411 1802) nil "hungry delete minor mode" single ((:commit . "0434458d3f6b2b585f332271feaa054bf4ec96d7") (:url . "http://github.com/nflath/hungry-delete"))]) (link-hint . [(20170923 855) ((avy (0 3 0)) (emacs (24 1)) (cl-lib (0 5))) "Use avy to open or copy visible urls." single ((:commit . "0294df85aee10b47fcf6c2c9bfe7e1038660fa21") (:url . "https://github.com/noctuid/link-hint.el") (:keywords "url"))]) (lorem-ipsum . [(20140911 1408) nil "Insert dummy pseudo Latin text." single ((:commit . "4b39f6fed455d67f635b3837cf5668bf74d0f6cd") (:keywords "tools" "language" "convenience"))]) (move-text . [(20170908 2030) nil "Move current line or region with M-up or M-down." single ((:commit . "bdaf3e3a0d33cd528cad1d10facbdf0635232e4d") (:url . "https://github.com/emacsfodder/move-text") (:keywords "edit"))]) (origami . [(20170129 805) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "Flexible text folding" tar ((:commit . "5630536d04613476e13b413fe05fd0bbff4107ca") (:url . "https://github.com/gregsexton/origami.el") (:keywords "folding"))]) (password-generator . [(20150222 1240) nil "Password generator for humans. Good, Bad, Phonetic passwords included." single ((:commit . "c8193d5e963bda0a2f8e51fd4a94dcf37c76f282") (:url . "http://github.com/zargener/emacs-password-genarator"))]) (string-inflection . [(20170419 1638) nil "underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names" single ((:commit . "297aaf68e666381521b02d433fcd28d8b51c48de") (:keywords "elisp"))]) (uuidgen . [(20140918 1601) nil "Provides various UUID generating functions" single ((:commit . "7eb96415484c3854a3f383d1a3e10b87ae674e22") (:keywords "extensions" "lisp" "tools"))]) (ws-butler . [(20170111 1534) nil "Unobtrusively remove trailing whitespace." single ((:commit . "80dabd5d158929e8433e46207bb521282b21e4f3") (:url . "https://github.com/lewang/ws-butler"))]) (persp-mode . [(20171014 111) nil "windows/buffers sets shared among frames + save/load." single ((:commit . "ccf87da2c230c3a91e627105b0f034a954e6842a") (:url . "https://github.com/Bad-ptr/persp-mode.el") (:keywords "perspectives" "session" "workspace" "persistence" "windows" "buffers" "convenience"))]) (evil-escape . [(20170913 618) ((emacs (24)) (evil (1 0 9)) (cl-lib (0 5))) "Escape from anything with a customizable key sequence" single ((:commit . "25920fb2f4ef48998eecea433c04096f8d124cfe") (:url . "https://github.com/syl20bnr/evil-escape") (:keywords "convenience" "editing" "evil"))]) (evil-visualstar . [(20160222 1648) ((evil (0))) "Starts a * or # search from the visual selection" single ((:commit . "06c053d8f7381f91c53311b1234872ca96ced752") (:url . "https://github.com/bling/evil-visualstar") (:keywords "evil" "vim" "visualstar"))]) (exec-path-from-shell . [(20170508 4) nil "Get environment variables such as $PATH from the shell" single ((:commit . "5e355fbc50913d1ffe48bf86df0bcecd8b369ffb") (:url . "https://github.com/purcell/exec-path-from-shell") (:keywords "environment"))]) (help-fns+ . [(20170223 733) nil "Extensions to `help-fns.el'." single ((:url . "https://www.emacswiki.org/emacs/download/help-fns%2b.el") (:keywords "help" "faces" "characters" "packages" "description"))]) (ace-jump-helm-line . [(20160918 1136) ((avy (0 4 0)) (helm (1 6 3))) "Ace-jump to a candidate in helm window" single ((:commit . "1483055255df3f8ae349f7520f05b1e43ea3ed37") (:url . "https://github.com/cute-jumper/ace-jump-helm-line") (:keywords "extensions"))]) (helm-ag . [(20170209 745) ((emacs (24 4)) (helm (2 0))) "the silver searcher with helm interface" single ((:commit . "2fc02c4ead29bf0db06fd70740cc7c364cb650ac") (:url . "https://github.com/syohex/emacs-helm-ag"))]) (helm-descbinds . [(20160916 713) ((helm (1 5))) "A convenient `describe-bindings' with `helm'" single ((:commit . "6d5ddc11e6cef86548bd6b3e0d840112d602659c") (:url . "https://github.com/emacs-helm/helm-descbinds") (:keywords "helm" "help"))]) (helm-flx . [(20170404 1230) ((emacs (24 4)) (helm (1 7 9)) (flx (0 5))) "Sort helm candidates by flx score" single ((:commit . "c8650d9b34afbc236c28aee12cbee998fda8d810") (:url . "https://github.com/PythonNut/helm-flx") (:keywords "convenience" "helm" "fuzzy" "flx"))]) (helm-make . [(20171004 1018) ((helm (1 5 3)) (projectile (0 11 0))) "Select a Makefile target with helm" single ((:commit . "786104ac0c3cf4fe5b53f841eb9fe10bda2e4031") (:url . "https://github.com/abo-abo/helm-make") (:keywords "makefile"))]) (helm-mode-manager . [(20151124 138) ((helm (1 5 3))) "Select and toggle major and minor modes with helm" single ((:commit . "5d9c3ca4f8205d07ff4e03c4c3e88f596751c1fc") (:url . "https://github.com/istib/helm-mode-manager"))]) (helm-projectile . [(20170926 1123) ((helm (1 7 7)) (projectile (0 14 0)) (cl-lib (0 3))) "Helm integration for Projectile" single ((:commit . "4466adbcada8be19ec97b9dba52e12b8da3da849") (:url . "https://github.com/bbatsov/helm-projectile") (:keywords "project" "convenience"))]) (helm-swoop . [(20170923 2127) ((helm (1 0)) (emacs (24 3))) "Efficiently hopping squeezed lines powered by helm interface" single ((:commit . "66a951700e0ef0621cc705791bdd6699488ab121") (:url . "https://github.com/ShingoFukuyama/helm-swoop") (:keywords "helm" "swoop" "inner" "buffer" "search"))]) (helm-themes . [(20160917 2245) ((helm-core (2 0)) (emacs (24 4))) "Color theme selection with helm interface" single ((:commit . "1160af42590b0d845a55e65e1e782d9e4027fd6e") (:url . "https://github.com/syohex/emacs-helm-themes"))]) (treemacs-evil . [(20170925 2232) ((evil (1 2 12)) (treemacs (0))) "Evil mode integration for treemacs" single ((:commit . "61b55c250ab6dd66b58f5467762f6c61f30b8ab4") (:url . "https://github.com/Alexander-Miller/treemacs"))]) (treemacs . [(20171024 1029) ((emacs (24 4)) (cl-lib (0 5)) (dash (2 11 0)) (s (1 10 0)) (f (0 11 0)) (ace-window (0 9 0)) (pfuture (1 2)) (hydra (0 13 2))) "A tree style file explorer package" tar ((:commit . "61b55c250ab6dd66b58f5467762f6c61f30b8ab4") (:url . "https://github.com/Alexander-Miller/treemacs"))]) (pfuture . [(20170726 1502) ((emacs (24 4))) "a simple wrapper around asynchronous processes" single ((:commit . "8b5cd8dfb8769d2b24484a313d3d21938afd3dfb") (:url . "https://github.com/Alexander-Miller/pfuture"))]) (ace-window . [(20170801 1334) ((avy (0 2 0))) "Quickly switch windows." single ((:commit . "6aaf1e634414e7485b47ff94aac6c34588f2a371") (:url . "https://github.com/abo-abo/ace-window") (:keywords "window" "location"))]) (treemacs-projectile . [(20170903 1235) ((projectile (0 14 0)) (treemacs (0))) "Projectile integration for treemacs" single ((:commit . "61b55c250ab6dd66b58f5467762f6c61f30b8ab4") (:url . "https://github.com/Alexander-Miller/treemacs"))]) (company-tern . [(20161004 1147) ((company (0 8 0)) (tern (0 0 1)) (dash (2 8 0)) (dash-functional (2 8 0)) (s (1 9 0)) (cl-lib (0 5 0))) "Tern backend for company-mode" single ((:commit . "10ac058b065ae73c1f30e9fb7d969dd1a79387be") (:url . "https://github.com/proofit404/company-tern"))]) (emmet-mode . [(20161113 2158) nil "Unofficial Emmet's support for emacs" single ((:commit . "5af39aaef59125fd80901f275c23c89493f9d133") (:url . "https://github.com/smihica/emmet-mode") (:keywords "convenience"))]) (js-doc . [(20160714 2134) nil "Insert JsDoc style comment easily" single ((:commit . "f0606e89d5aa89146f96edb38cf69af0068a9d1e") (:url . "https://github.com/mooz/js-doc") (:keywords "document" "comment"))]) (tern . [(20170925 1333) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" single ((:commit . "5c395b5d696aad5a185724f56c74a7f83349f3bd") (:url . "http://ternjs.net/"))]) (web-beautify . [(20161115 1447) nil "Format HTML, CSS and JavaScript/JSON" single ((:commit . "e1b45321d8c11b404b12c8e55afe55eaa7c84ee9") (:url . "https://github.com/yasuyk/web-beautify"))]) (web-mode . [(20171017 1214) ((emacs (23 1))) "major mode for editing web templates" single ((:commit . "4754211f44e9fe1389e4378553ad538460282225") (:url . "http://web-mode.org") (:keywords "languages"))]) (add-node-modules-path . [(20170914 1912) nil "Add node_modules to your exec-path" single ((:commit . "eb09f4743af210a8e27f21889b4e0fef33208e4a") (:url . "https://github.com/codesuki/add-node-modules-path") (:keywords "javascript" "node" "node_modules" "eslint"))]) (web-completion-data . [(20160318 148) nil "Shared completion data for ac-html and company-web" tar ((:commit . "c272c94e8a71b779c29653a532f619acad433a4f") (:url . "https://github.com/osv/web-completion-data") (:keywords "html" "auto-complete" "company"))]) (company-web . [(20160502 658) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar ((:commit . "2915da21c6327c7eaa0d03e237163228c9681224") (:url . "https://github.com/osv/company-web") (:keywords "html" "company"))]) (helm-css-scss . [(20140626 1725) ((helm (1 0)) (emacs (24))) "CSS/SCSS/LESS Selectors with helm interface" single ((:commit . "ab8348aa98e0daa2f1b771e35bdb06bfacbe5016") (:url . "https://github.com/ShingoFukuyama/helm-css-scss") (:keywords "scss" "css" "less" "selector" "helm"))]) (impatient-mode . [(20170505 1921) ((cl-lib (0 3)) (simple-httpd (1 4 0)) (htmlize (1 40))) "Serve buffers live over HTTP" tar ((:commit . "11600a8441a1c0339252b0c19f151ccac3ee96c7") (:url . "https://github.com/netguy204/imp.el"))]) (less-css-mode . [(20160930 2153) nil "Major mode for editing LESS CSS files (lesscss.org)" single ((:commit . "2c3f69640c3c98457255f601db98f520dee2e7b6") (:url . "https://github.com/purcell/less-css-mode") (:keywords "less" "css" "mode"))]) (pug-mode . [(20171018 829) ((emacs (24 4)) (cl-lib (0 5))) "Major mode for jade/pug template files" single ((:commit . "96718f802dad3acd5a3f770b1452b81e39f77d92") (:url . "https://github.com/hlissner/emacs-pug-mode") (:keywords "markup" "language" "jade" "pug"))]) (haml-mode . [(20170923 2153) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing Haml files" single ((:commit . "1cbb2de8f0fc25f35448c5cad04642f28078f3bb") (:url . "https://github.com/nex3/haml-mode") (:keywords "markup" "languages" "html"))]) (sass-mode . [(20161006 2326) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" single ((:commit . "37105f46f6ea3592039f2ea7d0463ae7f042616e") (:url . "http://github.com/nex3/haml/tree/master") (:keywords "markup" "language" "css"))]) (scss-mode . [(20150107 1400) nil "Major mode for editing SCSS files" single ((:commit . "b010d134f499c4b4ad33fe8a669a81e9a531b0b2") (:url . "https://github.com/antonj/scss-mode") (:keywords "scss" "css" "mode"))]) (slim-mode . [(20170728 648) nil "Major mode for editing Slim files" single ((:commit . "3636d18ab1c8b316eea71c4732eb44743e2ded87") (:url . "http://github.com/slim-template/emacs-slim") (:keywords "markup" "language"))]) (tagedit . [(20161121 55) ((s (1 3 1)) (dash (1 0 3))) "Some paredit-like features for html-mode" single ((:commit . "b3a70101a0dcf85498c92b7fcfa7fdbac869746c") (:keywords "convenience"))]) (coffee-mode . [(20170324 240) ((emacs (24 3))) "Major mode for CoffeeScript code" single ((:commit . "86ab8aae8662e8eff54d3013010b9c693b16eac5") (:url . "http://github.com/defunkt/coffee-mode") (:keywords "coffeescript" "major" "mode"))]) (ggtags . [(20170918 1838) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single ((:commit . "6293c438a4a7aae08b8f5dd5fc0082d3da0aa530") (:url . "https://github.com/leoliu/ggtags") (:keywords "tools" "convenience"))]) (helm-gtags . [(20170115 2129) ((emacs (24 4)) (helm (2 0))) "GNU GLOBAL helm interface" single ((:commit . "108e93d0d099ebb7b98847388f368311cf177033") (:url . "https://github.com/syohex/emacs-helm-gtags"))]) (js2-refactor . [(20171013 258) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar ((:commit . "2c3557a11e5e8250b713409f4f449838a7f83469"))]) (livid-mode . [(20131116 544) ((skewer-mode (1 5 3)) (s (1 8 0))) "Live browser eval of JavaScript every time a buffer changes" single ((:commit . "dfe5212fa64738bc4138bfebf349fbc8bc237c26") (:url . "https://github.com/pandeiro/livid-mode"))]) (vimrc-mode . [(20170814 1837) nil "Major mode for vimrc files" single ((:commit . "ba8140fba6e03a35b123acbd62fc8c6f0a03bf4a") (:url . "https://github.com/mcandre/vimrc-mode") (:keywords "languages" "vim"))]) (dactyl-mode . [(20140906 1025) nil "Major mode for editing Pentadactyl config files" single ((:commit . "cc55fe6b987271d9647492b8df4c812d884f661f") (:url . "https://github.com/luxbock/dactyl-mode") (:keywords "languages" "vim"))]) (ibuffer-projectile . [(20170721 1823) ((projectile (0 11 0))) "Group ibuffer's list by projectile root" single ((:commit . "431e29d6cf12fc333fc8dc16ceeba54b9416a4aa") (:url . "http://github.com/purcell/ibuffer-projectile") (:keywords "themes"))]) (tide . [(20171009 1142) ((dash (2 10 0)) (s (1 11 0)) (flycheck (27)) (typescript-mode (0 1)) (cl-lib (0 5))) "Typescript Interactive Development Environment" tar ((:commit . "d4a86487475b08adcbc1974c3362ce247d65a381") (:url . "http://github.com/ananthakumaran/tide") (:keywords "typescript"))]) (typescript-mode . [(20171022 1029) nil "Major mode for editing typescript" single ((:commit . "56a1ea861f80979d376716629abfce45a8e5e2c7") (:url . "http://github.com/ananthakumaran/typescript.el") (:keywords "typescript" "languages"))]) (ac-ispell . [(20151031 1926) ((auto-complete (1 4)) (cl-lib (0 5))) "ispell completion source for auto-complete" single ((:commit . "22bace7387e9012002a6a444922f75f9913077b0") (:url . "https://github.com/syohex/emacs-ac-ispell"))]) (company-statistics . [(20170210 1133) ((emacs (24 3)) (company (0 8 5))) "Sort candidates using completion history" single ((:commit . "e62157d43b2c874d2edbd547c3bdfb05d0a7ae5c") (:url . "https://github.com/company-mode/company-statistics") (:keywords "abbrev" "convenience" "matching"))]) (fuzzy . [(20150729 2037) nil "Fuzzy Matching" single ((:commit . "534d723ad2e06322ff8d9bd0ba4863d243f698e7") (:keywords "convenience"))]) (helm-company . [(20170608 1029) ((helm (1 5 9)) (company (0 6 13))) "Helm interface for company-mode" single ((:commit . "ae4e1a05455f5eaf07e61b8627934ea1df4eb048") (:url . "https://github.com/Sodel-the-Vociferous/helm-company"))]) (helm-c-yasnippet . [(20170128 742) ((helm (1 7 7)) (yasnippet (0 8 0)) (cl-lib (0 3))) "helm source for yasnippet.el" single ((:commit . "65ca732b510bfc31636708aebcfe4d2d845b59b0") (:keywords "convenience" "emulation"))]) (auto-yasnippet . [(20160925 225) ((yasnippet (0 8 0))) "Quickly create disposable yasnippets" single ((:commit . "d1ccfea87312c6dd8cf8501ab5b71b1d3d44d95b") (:url . "https://github.com/abo-abo/auto-yasnippet"))]) (eval-sexp-fu . [(20131230 1351) ((highlight (0))) "Tiny functionality enhancements for evaluating sexps." single ((:commit . "6cffd33155d10c3e58b39cbb170f42e910fd8595") (:keywords "lisp" "highlight" "convenience"))]) (cider-eval-sexp-fu . [(20160907 100) ((emacs (24)) (highlight (0)) (eval-sexp-fu (0 4 0))) "Briefly highlights an evaluated sexp." single ((:commit . "5687e7b33e17f2be40b036dac82da4a5bc6705fb") (:keywords "languages" "clojure" "cider"))]) (edn . [(20160215 419) ((cl-lib (0 3)) (emacs (24 1)) (peg (0 6))) "Support for reading and writing the edn data format from elisp" single ((:commit . "be9e32d1b49e35247b263b0243df7cfdc8d413ab") (:url . "https://www.github.com/expez/edn.el") (:keywords "edn" "clojure"))]) (multiple-cursors . [(20170908 1452) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar ((:commit . "10752700084595bb24712c27ba70a2326302e45b"))]) (peg . [(20150707 2341) nil "Parsing Expression Grammars in Emacs Lisp" single ((:commit . "081efeca91d790c7fbc90871ac22c40935f4833b"))]) (clj-refactor . [(20170720 712) ((emacs (24 4)) (s (1 8 0)) (seq (2 19)) (yasnippet (0 6 1)) (paredit (24)) (multiple-cursors (1 2 2)) (clojure-mode (5 6 1)) (cider (0 15 0)) (edn (1 1 2)) (inflections (2 3)) (hydra (0 13 2))) "A collection of clojure refactoring functions" tar ((:commit . "f5295df68955c23fffd60718039fd386d13c77f5") (:keywords "convenience" "clojure" "cider"))]) (clojure-snippets . [(20170713 2310) ((yasnippet (0 10 0))) "Yasnippets for clojure" tar ((:commit . "36207f9d8738851f5b686dfe0225ad0553bf8e68"))]) (parinfer . [(20170710 821) ((dash (2 13 0)) (cl-lib (0 5))) "Simpler Lisp editing" tar ((:commit . "23ac701e2a1a1364ca96d267437c3413986a4497") (:url . "https://github.com/DogLooksGood/parinfer-mode") (:keywords "parinfer"))]) (cider . [(20171001 112) ((emacs (24 4)) (clojure-mode (5 6 0)) (pkg-info (0 4)) (queue (0 1 1)) (spinner (1 7)) (seq (2 16))) "Clojure Interactive Development Environment that Rocks" tar ((:commit . "c60d1ae5802ec1dba90f5e4b51579488bbda55c6") (:url . "http://www.github.com/clojure-emacs/cider") (:keywords "languages" "clojure" "cider"))]) (spinner . [(1 7 3) nil "Add spinners and progress-bars to the mode-line for ongoing operations" single ((:url . "https://github.com/Malabarba/spinner.el") (:keywords "processes" "mode-line"))]) (queue . [(0 2) nil "Queue data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "data structures" "queue"))]) (clojure-mode . [(20171008 743) ((emacs (24 4))) "Major mode for Clojure code" single ((:commit . "35f5d71b196b1a4b147a56a82b723d0383cb7282") (:url . "http://github.com/clojure-emacs/clojure-mode") (:keywords "languages" "clojure" "clojurescript" "lisp"))]) (sayid . [(20170509 1215) ((cider (0 14 0))) "sayid nREPL middleware client" single ((:commit . "20a92323c3edc060c521aa93edab9dad47646b4f") (:url . "https://github.com/bpiel/sayid"))]) (color-identifiers-mode . [(20170814 1121) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names" single ((:commit . "5750ee9e1ab8a6890381bb461982113b1eb98879") (:url . "https://github.com/ankurdave/color-identifiers-mode") (:keywords "faces" "languages"))]) (rainbow-identifiers . [(20141102 726) ((emacs (24))) "Highlight identifiers according to their names" single ((:commit . "19fbfded1baa98d12335f26f6d7b20e5ae44ce2e") (:url . "https://github.com/Fanael/rainbow-identifiers"))]) (rainbow-mode . [(0 13) nil "Colorize color names in buffers" single ((:url . "http://elpa.gnu.org/packages/rainbow-mode.html") (:keywords "faces"))]) (evil-snipe . [(20170903 603) ((emacs (24 4)) (evil (1 2 12)) (cl-lib (0 5))) "emulate vim-sneak & vim-seek" single ((:commit . "69adb46546a871beb54a445cb22652ac276555c1") (:url . "https://github.com/hlissner/evil-snipe") (:keywords "emulation" "vim" "evil" "sneak" "seek"))]) (ranger . [(20170817 857) ((emacs (24 4))) "Make dired more like ranger" single ((:commit . "6bbff5df2e55f56047fca5058d9ca93ba4963aef") (:url . "https://github.com/ralesi/ranger") (:keywords "files" "convenience" "dired"))]) (evil-magit . [(20171018 722) ((evil (1 2 3)) (magit (2 6 0))) "evil-based key bindings for magit" single ((:commit . "a24186be7cc2cdab24b56f6dcc4665eeb8349c1a") (:url . "https://github.com/justbur/evil-magit"))]) (gitattributes-mode . [(20170118 1613) nil "Major mode for editing .gitattributes files" single ((:commit . "9f18eca514d242816a4969e86c4cfd2cf4dfe401") (:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git"))]) (gitconfig-mode . [(20170627 854) nil "Major mode for editing .gitconfig files" single ((:commit . "9f18eca514d242816a4969e86c4cfd2cf4dfe401") (:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git"))]) (git-link . [(20170603 1026) ((cl-lib (0 6 1))) "Get the GitHub/Bitbucket/GitLab URL for a buffer location" single ((:commit . "472af75eca7aba42a1934f408c4bda55e34c9dcf") (:url . "http://github.com/sshaw/git-link") (:keywords "git" "vc" "github" "bitbucket" "gitlab" "convenience"))]) (git-messenger . [(20170101 2040) ((emacs (24 3)) (popup (0 5 0))) "Pop up last commit information of current line" single ((:commit . "83815915eb8c1cb47443ff34bca3fecf7d2edf3a") (:url . "https://github.com/syohex/emacs-git-messenger"))]) (git-timemachine . [(20170325 220) ((emacs (24 3))) "Walk through git revisions of a file" single ((:commit . "7cb0d03bc370d3e734c8ee23b809a4e768b01743") (:url . "https://github.com/pidu/git-timemachine") (:keywords "git"))]) (gitignore-mode . [(20160319 302) nil "Major mode for editing .gitignore files" single ((:commit . "9f18eca514d242816a4969e86c4cfd2cf4dfe401") (:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git"))]) (helm-gitignore . [(20170210 1608) ((gitignore-mode (1 1 0)) (helm (1 7 0)) (request (0 1 0)) (cl-lib (0 5))) "Generate .gitignore files with gitignore.io." single ((:commit . "2a2e7da7855a6db0ab3bb6a6a087863d7abd4391") (:url . "https://github.com/jupl/helm-gitignore") (:keywords "helm" "gitignore" "gitignore.io"))]) (magit-gitflow . [(20170929 124) ((magit (2 1 0)) (magit-popup (2 2 0))) "gitflow extension for magit" single ((:commit . "cc41b561ec6eea947fe9a176349fb4f771ed865b") (:url . "https://github.com/jtatarik/magit-gitflow") (:keywords "vc" "tools"))]) (orgit . [(20170731 1003) ((emacs (24 4)) (dash (2 13 0)) (magit (2 10 0)) (org (8 3 3))) "support for Org links to Magit buffers" single ((:commit . "022687eb02f0bf0d0151d0ad917b165bfef2d663") (:url . "https://github.com/magit/orgit"))]) (smeargle . [(20161212 1558) ((emacs (24 3))) "Highlighting region by last updated time" single ((:commit . "0665b1ff5109731898bc4a0ca6d939933b804777") (:url . "https://github.com/syohex/emacs-smeargle"))]) (groovy-imports . [(20161003 151) ((emacs (24 4)) (s (1 10 0)) (pcache (0 3 2))) "Code for dealing with Groovy imports" single ((:commit . "e56d7dda617555ec6205644d32ffddf2e1fa43d9") (:url . "http://www.github.com/mbezjak/emacs-groovy-imports") (:keywords "groovy"))]) (groovy-mode . [(20171024 221) ((s (1 12 0))) "Major mode for Groovy source files" tar ((:commit . "c1e4cf8378bdd7e0d8205b2bcdcb3ff3e05ad8d2") (:keywords "languages"))]) (company-emacs-eclim . [(20170104 743) ((eclim (0 3)) (company (0 7)) (cl-lib (0 5))) "company-mode backend for eclim" single ((:commit . "14596d3a1c0e7f18be6b88eddebaf7f36eeca859"))]) (eclim . [(20171024 1038) ((dash (2 11 0)) (json (1 2)) (popup (0 5 2)) (s (1 9 0)) (cl-lib (0 5)) (yasnippet (0 10 0))) "An interface to the Eclipse IDE." tar ((:commit . "14596d3a1c0e7f18be6b88eddebaf7f36eeca859"))]) (ensime . [(20171027 1433) ((scala-mode (0 23)) (sbt-mode (0 2)) (yasnippet (0 10 0)) (company (0 9 0)) (dash (2 12 1)) (s (1 11 0)) (popup (0 5 3))) "ENhanced Scala Interaction Mode for Emacs" tar ((:commit . "483e94546d9b1de5841b8853882d5644cc419479") (:url . "https://github.com/ensime/ensime-emacs") (:keywords "languages"))]) (gradle-mode . [(20150313 1205) ((s (1 8 0))) "Gradle integration with Emacs' compile" single ((:commit . "e4d665d5784ecda7ddfba015f07c69be3cfc45f2") (:url . "http://github.com/jacobono/emacs-gradle-mode") (:keywords "gradle"))]) (meghanada . [(20170723 1724) ((emacs (24 3)) (yasnippet (0 6 1)) (company (0 9 0)) (flycheck (0 23))) "A better java development mode" tar ((:commit . "af65a0c60bbdda051e0d8ab0b7213249eb6703c5") (:url . "https://github.com/mopemope/meghanada-emacs") (:keywords "languages" "java"))]) (company-emoji . [(20161230 1937) ((cl-lib (0 5)) (company (0 8 0))) "company-mode backend for emoji" tar ((:commit . "8dc88ffe0773ef44321f245d39430c14a1bc2b82") (:url . "https://github.com/dunn/company-emoji.git") (:keywords "emoji" "company"))]) (emoji-cheat-sheet-plus . [(20150617 631) ((emacs (24)) (helm (1 6 4))) "emoji-cheat-sheet for emacs" tar ((:commit . "96a003127d646a2683d81ca906a17eace0a6413e") (:url . "https://github.com/syl20bnr/emacs-emoji-cheat-sheet-plus") (:keywords "emacs" "emoji"))]) (evil-org . [(20170917 1447) ((emacs (24 4)) (evil (1 0)) (org (8 0 0))) "evil keybindings for org-mode" single ((:commit . "52bbb105a6a7fa9ead68c56746740b4343ecd6e9") (:url . "https://github.com/Somelauw/evil-org-mode.git") (:keywords "evil" "vim-emulation" "org-mode" "key-bindings" "presets"))]) (gnuplot . [(20141231 1337) nil "drive gnuplot from within emacs" tar ((:commit . "21f9046e3f5caad41b750b5c9cee02fa4fd20fb9") (:keywords "gnuplot" "plotting"))]) (htmlize . [(20171017 141) nil "Convert buffer text and decorations to HTML." single ((:commit . "a0b55cba65a225df8d9e17a3ac448ce9e8ec962d") (:keywords "hypermedia" "extensions"))]) (org-brain . [(20171004 1305) ((emacs (25)) (org (9))) "Org-mode concept mapping" single ((:commit . "35d46695ceffff4069e66fa2a4f039509f1a3c7e") (:url . "http://github.com/Kungsgeten/org-brain") (:keywords "outlines" "hypermedia"))]) (org-journal . [(20170928 231) nil "a simple org-mode based journaling mode" single ((:commit . "06402de02461338503bf034ceca44c3a5a898778") (:url . "http://github.com/bastibe/org-journal"))]) (org-download . [(20170924 2309) ((async (1 2))) "Image drag-and-drop for Emacs org-mode" single ((:commit . "14261c2619be224fc4c499624abc2cba3663e7f5") (:url . "https://github.com/abo-abo/org-download") (:keywords "images" "screenshots" "download"))]) (org-pomodoro . [(20161119 226) ((alert (0 5 10)) (cl-lib (0 5))) "Pomodoro implementation for org-mode." tar ((:commit . "4b1d650b8d0b607a616a8c792da428334fe635f7") (:url . "https://github.com/lolownia/org-pomodoro"))]) (org-present . [(20141109 1756) ((org (7))) "Minimalist presentation minor-mode for Emacs org-mode." single ((:commit . "1b519cfd5abf44bed307cac576dc9fd61eb2c35f") (:url . "https://github.com/rlister/org-present"))]) (org-category-capture . [(20170819 1047) ((org (9 0 0)) (emacs (24))) "Contextualy capture of org-mode TODOs." single ((:commit . "8cec702f602b18da90b3d6207888a887b8e07750") (:url . "https://github.com/IvanMalison/org-projectile") (:keywords "org-mode" "todo" "tools" "outlines"))]) (org-projectile . [(20171022 950) ((projectile (0 11 0)) (dash (2 10 0)) (emacs (24)) (s (1 9 0)) (org-category-capture (0 0 0))) "Repository todo management for org-mode" single ((:commit . "8cec702f602b18da90b3d6207888a887b8e07750") (:url . "https://github.com/IvanMalison/org-projectile") (:keywords "org-mode" "projectile" "todo" "tools" "outlines"))]) (ox-twbs . [(20161103 1316) nil "Bootstrap compatible HTML Back-End for Org" single ((:commit . "2414e6b1de7deb6dd2ae79a7be633fdccb9c2f28") (:url . "https://github.com/marsmining/ox-twbs") (:keywords "org" "html" "publish" "twitter" "bootstrap"))]) (ox-gfm . [(20170628 1402) nil "Github Flavored Markdown Back-End for Org Export Engine" single ((:commit . "99f93011b069e02b37c9660b8fcb45dab086a07f") (:keywords "org" "wp" "markdown" "github"))]) (ox-reveal . [(20161027 226) ((org (20150330))) "reveal.js Presentation Back-End for Org Export Engine" single ((:commit . "001567cc12d50ba07612edd1718b86a12e8c2547") (:keywords "outlines" "hypermedia" "slideshow" "presentation"))]) (ox-hugo . [(20171026 1402) ((emacs (24 5)) (org (9 0))) "Hugo Markdown Back-End for Org Export Engine" tar ((:commit . "4a476d906fc39210584c8ad435b320c9a34ae93b") (:url . "https://ox-hugo.scripter.co") (:keywords "org" "markdown" "docs"))]) (org-plus-contrib . [(20171023) nil "Outline-based notes management and organizer" tar nil]) (org-bullets . [(20140918 1137) nil "Show bullets in org-mode as UTF-8 characters" single ((:commit . "b70ac2ec805bcb626a6e39ea696354577c681b36") (:url . "https://github.com/sabof/org-bullets"))]) (toc-org . [(20171009 156) nil "add table of contents to org-mode files (formerly, org-toc)" single ((:commit . "4d259c9cea3f575e5210974c025ebe3d51cc317f") (:url . "https://github.com/snosov1/toc-org") (:keywords "org-mode" "org-toc" "toc-org" "org" "toc" "table" "of" "contents"))]) (launchctl . [(20150518 609) ((emacs (24 1))) "Interface to launchctl on Mac OS X." single ((:commit . "73f8f52a5aa9a0be9bdcf68c29ad0fa2b4a115a4") (:url . "http://github.com/pekingduck/launchctl-el") (:keywords "tools" "convenience"))]) (osx-dictionary . [(20171026 34) ((cl-lib (0 5))) "Interface for OSX Dictionary.app" tar ((:commit . "b16630ecf69f87ac873486d8b9c8c03e6c9ea7fa") (:url . "https://github.com/xuchunyang/osx-dictionary.el") (:keywords "mac" "dictionary"))]) (osx-trash . [(20160520 600) ((emacs (24 1))) "System trash for OS X" tar ((:commit . "0f1dc052d0a750b8c75f14530a4897f5d4324b4e") (:url . "https://github.com/lunaryorn/osx-trash.el") (:keywords "files" "convenience" "tools" "unix"))]) (pbcopy . [(20150224 2059) nil "Emacs Interface to pbcopy" single ((:commit . "338f7245746b5de1bb96c5cc2b32bfd9b5d83272") (:url . "https://github.com/jkp/pbcopy.el") (:keywords "mac" "osx" "pbcopy"))]) (reveal-in-osx-finder . [(20150802 957) nil "Reveal file associated with buffer in OS X Finder" single ((:commit . "5710e5936e47139a610ec9a06899f72e77ddc7bc") (:url . "https://github.com/kaz-yos/reveal-in-osx-finder") (:keywords "os x" "finder"))]) (know-your-http-well . [(20160208 1504) nil "Look up the meaning of HTTP headers, methods, relations, status codes" tar ((:commit . "3cc5ab6d2764ab7aacb1b6e026abaccbeb6c37f2"))]) (company-restclient . [(20151202 401) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24)) (know-your-http-well (0 2 0)) (restclient (0 0 0))) "company-mode completion back-end for restclient-mode" single ((:commit . "ef67ba2f613ce3d61b70011c9d0a303a754ffc5b") (:url . "https://github.com/iquiw/company-restclient"))]) (ob-http . [(20170920 2251) ((s (1 9 0)) (cl-lib (0 5))) "http request in org-mode babel" tar ((:commit . "c4da6d47b3f96c31c00f9eaaf712b59afe00daef") (:url . "http://github.com/zweifisch/ob-http"))]) (ob-restclient . [(20160323 2305) ((restclient (0))) "org-babel functions for restclient-mode" single ((:commit . "08b82b9ea668631968ae4fb531fd74494630f840") (:url . "http://orgmode.org") (:keywords "literate programming" "reproducible research"))]) (restclient . [(20170727 825) nil "An interactive HTTP client for Emacs" single ((:commit . "ef6d756e2013843f7afcbea42b69ad54aa5de518") (:keywords "http"))]) (restclient-helm . [(20170314 854) ((restclient (0)) (helm (1 9 4))) "helm interface for restclient.el" single ((:commit . "ef6d756e2013843f7afcbea42b69ad54aa5de518") (:keywords "http" "helm"))]) (engine-mode . [(20170812 2007) ((cl-lib (0 5))) "Define and query search engines from within Emacs." single ((:commit . "408932727bb723017eaf6338e50cb6d1266b8df8") (:url . "https://github.com/hrs/engine-mode"))]) (esh-help . [(20170829 2111) ((dash (1 4 0))) "Add some help functions and support for Eshell" single ((:commit . "8a8a9d4d9852f8bd96da3b94e95ff57097ac8ec6") (:url . "https://github.com/tom-tan/esh-help/") (:keywords "eshell" "extensions"))]) (eshell-prompt-extras . [(20171020 2207) nil "Display extra information for your eshell prompt." single ((:commit . "9b1a49853909c4fae95d32bb9a68cace471c161e") (:url . "https://github.com/hiddenlotus/eshell-prompt-extras") (:keywords "eshell" "prompt"))]) (eshell-z . [(20170116 2038) ((cl-lib (0 5))) "cd to frequent directory in eshell" single ((:commit . "c9334cbc1552234df3437f35d98e32f4d18446b8") (:url . "https://github.com/xuchunyang/eshell-z") (:keywords "convenience"))]) (multi-term . [(20160619 233) nil "Managing multiple terminal buffers in Emacs." single ((:commit . "f954e4e18b0a035151d34852387e724d87a3316f") (:url . "http://www.emacswiki.org/emacs/download/multi-term.el") (:keywords "term" "terminal" "multiple buffer"))]) (shell-pop . [(20170304 616) ((emacs (24)) (cl-lib (0 5))) "helps you to use shell easily on Emacs. Only one key action to work." single ((:commit . "4a3a9d093ad1add792bba764c601aa28de302b34") (:url . "http://github.com/kyagi/shell-pop-el") (:keywords "shell" "terminal" "tools"))]) (xterm-color . [(20170102 1525) ((cl-lib (0 5))) "ANSI & XTERM 256 color support" single ((:commit . "5873477fd7bd6e54142ab35fbc623ea9b55200aa") (:url . "https://github.com/atomontage/xterm-color") (:keywords "faces"))]) (auto-dictionary . [(20150410 910) nil "automatic dictionary switcher for flyspell" single ((:commit . "b364e08009fe0062cf0927d8a0582fad5a12b8e7") (:url . "http://nschum.de/src/emacs/auto-dictionary/") (:keywords "wp"))]) (flyspell-correct-ivy . [(20161031 1134) ((flyspell-correct (0 4 0)) (ivy (0 8 0))) "correcting words with flyspell via ivy interface" single ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyspell-correct-helm . [(20161031 1134) ((flyspell-correct (0 4 0)) (helm (1 9 0))) "correcting words with flyspell via helm interface" single ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyspell-correct . [(20170213 700) nil "correcting words with flyspell via custom interface" tar ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyspell-correct-popup . [(20161031 1134) ((flyspell-correct (0 4 0)) (popup (0 5 3))) "correcting words with flyspell via popup interface" single ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyspell-popup . [(20170529 115) ((popup (0 5 0))) "Correcting words with Flyspell in popup menus" single ((:commit . "29311849bfd253b9b689bf331860b4c4d3bd4dde") (:url . "https://github.com/xuchunyang/flyspell-popup") (:keywords "convenience"))]) (flycheck-pos-tip . [(20170504 1504) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" single ((:commit . "7b94c0c1e3185a4350dc39885add3927037ebad8") (:url . "https://github.com/flycheck/flycheck-pos-tip") (:keywords "tools" "convenience"))]) (ansible . [(20170926 1951) ((s (1 9 0)) (f (0 16 2))) "Ansible minor mode" tar ((:commit . "9da54a2a426dca259ec9c2a8a60fb58e954be5bc") (:url . "http://101000lab.org"))]) (ansible-doc . [(20160924 124) ((emacs (24 3))) "Ansible documentation Minor Mode" single ((:commit . "86083a7bb2ed0468ca64e52076b06441a2f8e9e0") (:url . "https://github.com/lunaryorn/ansible-doc.el") (:keywords "tools" "help"))]) (company-ansible . [(20170430 53) ((emacs (24 4)) (company (0 8 12))) "A company back-end for ansible" tar ((:commit . "2c30c3bdb8316b27d5c1832b944cb146d00de456") (:url . "https://github.com/krzysztof-magosa/company-ansible") (:keywords "ansible"))]) (jinja2-mode . [(20141128 207) nil "A major mode for jinja2" single ((:commit . "cfaa7bbe7bb290cc500440124ce89686f3e26f86"))]) (csv-mode . [(1 6) nil "Major mode for editing comma/char separated values" single ((:url . "http://elpa.gnu.org/packages/csv-mode.html") (:keywords "convenience"))]) (json-mode . [(20170719 2205) ((json-reformat (0 0 5)) (json-snatcher (1 0 0))) "Major mode for editing JSON files." single ((:commit . "32d5a9b3319e6797c4d52e7d61a65e5638102ef4") (:url . "https://github.com/joshwnj/json-mode"))]) (json-snatcher . [(20150511 2047) ((emacs (24))) "Grabs the path to JSON values in a JSON file" single ((:commit . "c4cecc0a5051bd364373aa499c47a1bb7a5ac51c") (:url . "http://github.com/sterlingg/json-snatcher"))]) (json-reformat . [(20160212 53) nil "Reformatting tool for JSON" single ((:commit . "8eb6668ed447988aea06467ba8f42e1f2178246f") (:url . "https://github.com/gongo/json-reformat") (:keywords "json"))]) (docker . [(20170718 303) ((emacs (24 4)) (dash (2 12 1)) (docker-tramp (0 1)) (magit-popup (2 6 0)) (s (1 11 0)) (tablist (0 70)) (json-mode (1 7 0))) "Emacs interface to Docker" tar ((:commit . "8070936871e0fbb20fb04c28630288ebe314b8b9") (:url . "https://github.com/Silex/docker.el") (:keywords "filename" "convenience"))]) (docker-tramp . [(20170206 1925) ((emacs (24)) (cl-lib (0 5))) "TRAMP integration for docker containers" tar ((:commit . "8e2b671eff7a81af43b76d9dfcf94ddaa8333a23") (:url . "https://github.com/emacs-pe/docker-tramp.el") (:keywords "docker" "convenience"))]) (dockerfile-mode . [(20170418 1024) nil "Major mode for editing Docker's Dockerfiles" single ((:commit . "3c6bc90360a2df53caad1721ee4c8285e2e22369"))]) (packed . [(20170819 942) ((emacs (24 3))) "package manager agnostic Emacs Lisp package utilities" single ((:commit . "94ea12b9d44bfa42c28d0548199f2fcd19e4aa6a") (:url . "https://github.com/emacscollective/packed") (:keywords "compile" "convenience" "lisp" "package" "library"))]) (auto-compile . [(20170817 1437) ((emacs (24 3)) (packed (2 0 0))) "automatically compile Emacs Lisp libraries" single ((:commit . "a31819a1b75a2320edb0f7f25d6c6faf528bf41a") (:url . "https://github.com/emacscollective/auto-compile") (:keywords "compile" "convenience" "lisp"))]) (elisp-slime-nav . [(20160128 1109) ((cl-lib (0 2))) "Make M-. and M-, work in elisp like they do in slime" single ((:commit . "34938422929800839e2f935aca890cd4a229ca99") (:url . "https://github.com/purcell/elisp-slime-nav") (:keywords "navigation" "slime" "elisp" "emacs-lisp"))]) (srefactor . [(20170223 540) ((emacs (24 4))) "A refactoring tool based on Semantic parser framework" tar ((:commit . "531753fdc24570a1341c169f36b9fa0d4c09ff42") (:url . "https://github.com/tuhdo/semantic-refactor") (:keywords "c" "languages" "tools"))]) (flycheck-ledger . [(20140605 1146) ((flycheck (0 15))) "Flycheck integration for ledger files" single ((:commit . "2944c56ad72945f78f88fa363e0239b40650d829") (:keywords "convenience" "languages" "tools"))]) (ledger-mode . [(20170901 2039) ((emacs (24 3))) "Helper code for use with the \"ledger\" command-line tool" tar ((:commit . "24b43e34dd34de23e54d7ddaa2a147efda6af03d"))]) (2048-game . [(20151026 1233) nil "play 2048 in Emacs" single ((:url . "https://bitbucket.org/zck/2048.el"))]) (pacmacs . [(20160131 32) ((emacs (24 4)) (dash (2 11 0)) (dash-functional (1 2 0)) (cl-lib (0 5)) (f (0 18 0))) "Pacman for Emacs" tar ((:commit . "d813e9c62c2540fe619234824fc60e128c786442") (:url . "http://github.com/codingteam/pacmacs.el"))]) (sudoku . [(20161110 2306) ((emacs (24 4))) "Simple sudoku game, can download puzzles" single ((:commit . "77c11b5041b58fc943cf1668b44b40bae039cb5b") (:keywords "games"))]) (mmt . [(20170519 4) ((emacs (24 1)) (cl-lib (0 3))) "Missing macro tools for Emacs Lisp" single ((:commit . "5cc5d1ee3efe675fa49d62fe0ae6b483d7ad9392") (:url . "https://github.com/mrkkrp/mmt") (:keywords "macro" "emacs-lisp"))]) (typit . [(20170519 51) ((emacs (24 4)) (f (0 18)) (mmt (0 1 1))) "Typing game similar to tests on 10 fast fingers" tar ((:commit . "bf6e72d76c0f3a68d7cd53c6580e92aa15d28dc5") (:url . "https://github.com/mrkkrp/typit") (:keywords "games"))]) (gist . [(20170604 1834) ((emacs (24 1)) (gh (0 10 0))) "Emacs integration for gist.github.com" single ((:commit . "a03f142455e8b39f77fbd57ee1c1e44478c1f9e2") (:url . "https://github.com/defunkt/gist.el") (:keywords "tools"))]) (github-clone . [(20160622 2010) ((gh (0 7 2)) (magit (2 1 0)) (emacs (24 4))) "Fork and clone github repos" single ((:commit . "467b40ca60a6c26257466ebc43c74414df7f19cc") (:url . "https://github.com/dgtized/github-clone.el") (:keywords "vc" "tools"))]) (github-search . [(20170823 2023) ((magit (0 8 1)) (gh (1 0 0))) "Clone repositories by searching github" single ((:commit . "c5fa1d9f8f9bcf201fa31478a6f5e02ed5ac086b") (:url . "https://github.com/IvanMalison/github-search") (:keywords "github" "search" "clone" "api" "gh" "magit" "vc" "tools"))]) (magit . [(20171027 1333) ((emacs (24 4)) (async (20170823)) (dash (20170810)) (with-editor (20170817)) (git-commit (20170823)) (magit-popup (20170824))) "A Git porcelain inside Emacs" tar ((:commit . "8f0de31d1e2ac27b7325877d096936235fde0027") (:url . "https://github.com/magit/magit") (:keywords "git" "tools" "vc"))]) (gh . [(20170512 2049) ((emacs (24 3)) (s (1 9 0)) (dash (2 9 0)) (pcache (0 4 1)) (logito (0 1)) (marshal (0 6 3))) "A GitHub library for Emacs" tar ((:commit . "76255942ccc84d5cf918a2b6411a8ac98a7c8585"))]) (marshal . [(20171018 932) ((eieio (1 4)) (json (1 3)) (ht (2 1))) "eieio extension for automatic (un)marshalling" single ((:commit . "406ea2f60c7e4aeafd384b8d6696d726b3d8f611") (:url . "https://github.com/sigma/marshal.el") (:keywords "eieio"))]) (logito . [(20120225 1255) ((eieio (1 3))) "logging library for Emacs" single ((:commit . "824acb89d2cc18cb47281a4fbddd81ad244a2052") (:keywords "lisp" "tool"))]) (magit-popup . [(20171023 926) ((emacs (24 4)) (async (20170823)) (dash (20170810))) "Define prefix-infix-suffix command combos" tar ((:commit . "f4f4e9b9199f03df5cbc8ca5d56144327f63c1bf") (:url . "https://github.com/magit/magit") (:keywords "bindings"))]) (magit-gh-pulls . [(20161020 249) ((emacs (24)) (gh (0 9 1)) (magit (2 1 0)) (pcache (0 2 3)) (s (1 6 1))) "GitHub pull requests extension for Magit" single ((:commit . "7eb4491d889c4de2e3169b91d34e7d863edf94b7") (:url . "https://github.com/sigma/magit-gh-pulls") (:keywords "git" "tools"))]) (browse-at-remote . [(20170720 1518) ((f (0 17 2)) (s (1 9 0)) (cl-lib (0 5))) "Open github/gitlab/bitbucket/stash page from Emacs" single ((:commit . "b5cff7971ca8bbb966e3acd9b7e5c4c007f94215") (:keywords "github" "gitlab" "bitbucket" "convenience"))]) (diff-hl . [(20170709 2000) ((cl-lib (0 2)) (emacs (24 3))) "Highlight uncommitted changes using VC" tar ((:commit . "bec9889de7bf48d28826039880cec9bfad24a628") (:url . "https://github.com/dgutov/diff-hl") (:keywords "vc" "diff"))]) (git-gutter . [(20161105 656) ((emacs (24 3))) "Port of Sublime Text plugin GitGutter" single ((:commit . "00c05264af046b5ce248e5b0bc42f117d9c27a09") (:url . "https://github.com/syohex/emacs-git-gutter"))]) (git-gutter-fringe . [(20170112 2133) ((git-gutter (0 88)) (fringe-helper (0 1 1)) (cl-lib (0 5)) (emacs (24))) "Fringe version of git-gutter.el" single ((:commit . "16226caab44174301f1659f7bf8cc67a76153445") (:url . "https://github.com/syohex/emacs-git-gutter-fringe"))]) (fringe-helper . [(20140620 1409) nil "helper functions for fringe bitmaps" single ((:commit . "ef4a9c023bae18ec1ddd7265f1f2d6d2e775efdd") (:url . "http://nschum.de/src/emacs/fringe-helper/") (:keywords "lisp"))]) (git-gutter+ . [(20151204 923) ((git-commit (0)) (dash (0))) "Manage Git hunks straight from the buffer" single ((:commit . "b7726997806d9a2da9fe84ff00ecf21d62b6f975") (:url . "https://github.com/nonsequitur/git-gutter-plus") (:keywords "git" "vc"))]) (git-commit . [(20171007 346) ((emacs (24 4)) (dash (20170810)) (with-editor (20170817))) "Edit Git commit messages" single ((:commit . "4545284932a23c9590a45010d3142a4b4dea377e") (:url . "https://github.com/magit/magit") (:keywords "git" "tools" "vc"))]) (git-gutter-fringe+ . [(20140729 403) ((git-gutter+ (0 1)) (fringe-helper (1 0 1))) "Fringe version of git-gutter+.el" single ((:commit . "7a2f49d2455a3a872e90e5f7dd4e6b27f1d96cfc") (:url . "https://github.com/nonsequitur/git-gutter-fringe-plus"))]) (imenu-list . [(20170728 632) ((cl-lib (0 5))) "Show imenu entries in a seperate buffer" single ((:commit . "27170d27c9594989587c03c23f753a809f6a0e10") (:url . "https://github.com/bmag/imenu-list"))]) (gh-md . [(20151207 940) ((emacs (24))) "Render markdown using the Github api" single ((:commit . "693cb0dcadff70e813e1a9d303d227aff7898557") (:url . "https://github.com/emacs-pe/gh-md.el") (:keywords "convenience"))]) (markdown-toc . [(20170711 1249) ((s (1 9 0)) (dash (2 11 0)) (markdown-mode (2 1))) "A simple TOC generator for markdown file" tar ((:commit . "7038f4f6d5c2bc7e4aea89699a607ac2b7dd16a8"))]) (vmd-mode . [(20161106 125) ((emacs (24 3))) "Fast Github-flavored Markdown preview using a vmd subprocess." single ((:commit . "e3b27f4f179002984643895292bb207c3e221a5c") (:url . "https://github.com/blak3mill3r/vmd-mode") (:keywords "markdown" "preview" "live" "vmd"))]) (nginx-mode . [(20170611 2137) nil "major mode for editing nginx config files" single ((:commit . "a2bab83c2eb233d57d76b236e7c141c2ccc97005") (:keywords "languages" "nginx"))]) (anaconda-mode . [(20170924 704) ((emacs (24)) (pythonic (0 1 0)) (dash (2 6 0)) (s (1 9)) (f (0 16 2))) "Code navigation, documentation lookup and completion for Python" single ((:commit . "89fc16d50b889a17521084347b28f3011b84e113") (:url . "https://github.com/proofit404/anaconda-mode"))]) (company-anaconda . [(20160809 705) ((company (0 8 0)) (anaconda-mode (0 1 1)) (cl-lib (0 5 0)) (dash (2 6 0)) (s (1 9))) "Anaconda backend for company-mode" single ((:commit . "b268a00821c79d7e4c5da0d7035356afb389b3a7") (:url . "https://github.com/proofit404/anaconda-mode"))]) (cython-mode . [(20170907 1648) nil "Major mode for editing Cython files" single ((:commit . "3a57260ef103be2b7487c3dcbaa6982d0c2fdc0d"))]) (helm-cscope . [(20170326 22) ((xcscope (1 0)) (helm (1 6 7)) (cl-lib (0 5)) (emacs (24 1))) "Helm interface for xcscope.el." single ((:commit . "3cc7259ab4989f9f7ca039e703cdac14b907530a") (:url . "https://github.com/alpha22jp/helm-cscope.el") (:keywords "cscope" "helm"))]) (helm-pydoc . [(20160917 2242) ((helm-core (2 0)) (emacs (24 4))) "pydoc with helm interface" tar ((:commit . "85480a29b56dacde425655bc8f5a597c785afdf5") (:url . "https://github.com/syohex/emacs-helm-pydoc"))]) (hy-mode . [(20171028 954) ((dash (2 13 0)) (dash-functional (1 2 0)) (s (1 11 0)) (emacs (24))) "Major mode for Hylang" tar ((:commit . "71b27650a0f6586a7f738448c1be165516b4b97b") (:url . "http://github.com/hylang/hy-mode") (:keywords "languages" "lisp" "python"))]) (live-py-mode . [(20170928 2107) ((emacs (24 3))) "Live Coding in Python" tar ((:commit . "619a1b35b9a8151703421e2716ea0409162a4b84") (:url . "http://donkirkby.github.io/live-py-plugin/") (:keywords "live" "coding"))]) (pip-requirements . [(20160930 2032) ((dash (2 8 0))) "A major mode for editing pip requirements files." single ((:commit . "babe44af1132fb05748c7ee098a4226b9e31eb76"))]) (py-isort . [(20160925 318) nil "Use isort to sort the imports in a Python buffer" single ((:commit . "e67306f459c47c53a65604e4eea88a3914596560") (:url . "http://paetzke.me/project/py-isort.el"))]) (pythonic . [(20160221 1123) ((emacs (24)) (cl-lib (0 5)) (dash (2 11)) (s (1 9)) (f (0 17 2))) "Utility functions for writing pythonic emacs package." single ((:commit . "87475def246b84339f464e80c76c7e7fcc2e780a") (:url . "https://github.com/proofit404/pythonic"))]) (pyenv-mode . [(20170801 1648) ((pythonic (0 1 0))) "Integrate pyenv with python-mode" single ((:commit . "215b7f0ed3847e0c844adbff7d9b19057aa7c820") (:url . "https://github.com/proofit404/pyenv-mode"))]) (pytest . [(20170614 745) ((s (1 9 0))) "Easy Python test running in Emacs" single ((:commit . "013fccd684fc8f2092d6e1ec4203ec574e12051d") (:url . "https://github.com/ionrock/pytest-el") (:keywords "pytest" "python" "testing"))]) (pyvenv . [(20171005 1106) nil "Python virtual environment interface" single ((:commit . "9f528449dfc35516647118689a2104603f23b49c") (:url . "http://github.com/jorgenschaefer/pyvenv") (:keywords "python" "virtualenv" "tools"))]) (stickyfunc-enhance . [(20150429 1114) ((emacs (24 3))) "An enhancement to stock `semantic-stickyfunc-mode'" single ((:commit . "13bdba51fcd83ccbc3267959d23afc94d458dcb0") (:url . "https://github.com/tuhdo/semantic-stickyfunc-enhance") (:keywords "c" "languages" "tools"))]) (yapfify . [(20170519 115) nil "(automatically) format python buffers using YAPF." single ((:commit . "492eb038b35f49b1012fb843d880bccc40f2260b") (:url . "https://github.com/JorisE/yapfify"))]) (company-shell . [(20170517 2241) ((emacs (24 4)) (company (0 8 12)) (dash (2 12 0)) (cl-lib (0 5))) "Company mode backend for shell functions" single ((:commit . "6ae625f80d90e0779c79de38e8f83a336c1d00fa") (:url . "https://github.com/Alexander-Miller/company-shell") (:keywords "company" "shell" "auto-completion"))]) (fish-mode . [(20170430 623) ((emacs (24))) "Major mode for fish shell scripts" single ((:commit . "888d037008272f6001207a2990e51ba87fe187e6") (:keywords "fish" "shell"))]) (flycheck-bashate . [(20160629 2140) ((flycheck (0 24)) (emacs (24 4))) "Integrate bashate with flycheck" single ((:commit . "77fa03dbc578c34fe71ca44926bac2aff8f2b021") (:url . "https://github.com/alexmurray/flycheck-bashate"))]) (insert-shebang . [(20170825 438) nil "Insert shebang line automatically." single ((:commit . "adfa473f07443b231914d277c20a3419b30399b6") (:url . "http://github.com/psachin/insert-shebang") (:keywords "shebang" "tool" "convenience"))]) (swift-mode . [(20170918 51) ((emacs (24 4)) (seq (2 3))) "Major-mode for Apple's Swift programming language." tar ((:commit . "e8d9a5d7af59e8be25997b8b048d7c3e257cd0b0") (:url . "https://github.com/swift-emacs/swift-mode") (:keywords "languages" "swift"))]) (hcl-mode . [(20170107 27) ((emacs (24 3))) "Major mode for Hashicorp" single ((:commit . "0f2c5ec7e7bcf77c8548e8cac8721ea935ca1b5e") (:url . "https://github.com/syohex/emacs-hcl-mode"))]) (terraform-mode . [(20170111 2117) ((emacs (24 3)) (hcl-mode (0 3))) "Major mode for terraform configuration file" single ((:commit . "6973d1acaba2835dfdf174f5a5e27de6366002e1") (:url . "https://github.com/syohex/emacs-terraform-mode"))]) (vagrant . [(20170301 1406) nil "Manage a vagrant box from emacs" single ((:commit . "636ce2f9af32ea199170335a9cf1201b64873440") (:url . "https://github.com/ottbot/vagrant.el") (:keywords "vagrant" "chef"))]) (vagrant-tramp . [(20160427 1632) ((dash (2 12 0))) "Vagrant method for TRAMP" tar ((:commit . "453ba605b28d2964bb4e10074f1e6891ebb4d2d6") (:url . "https://github.com/dougm/vagrant-tramp") (:keywords "vagrant"))]) (zenburn-theme . [(20171010 543) nil "A low contrast color theme for Emacs." single ((:commit . "a26323ca3029d653f658b8236ae9528d242c885b") (:url . "http://github.com/bbatsov/zenburn-emacs"))]) (monokai-theme . [(20171013 236) nil "A fruity color theme for Emacs." single ((:commit . "65682b13b4b65460db3d4cdae9d7be80cc2327e7") (:url . "http://github.com/oneKelvinSmith/monokai-emacs"))]) (gruvbox-theme . [(20170923 2008) ((autothemer (0 2))) "A retro-groove colour theme for Emacs" tar ((:commit . "4241935d9cc786d0b4a3a445830c395f2a9eeb90") (:url . "http://github.com/Greduan/emacs-theme-gruvbox"))]) (darkokai-theme . [(20170728 339) nil "A darker variant on Monokai." single ((:commit . "d881d51acf0a7f806ae68d48305e30941a741a0e") (:url . "http://github.com/sjrmanning/darkokai"))]) (twittering-mode . [(20170312 735) nil "Major mode for Twitter" single ((:commit . "63c96fb029033b1a300b90aa922e167c7c405bcb") (:url . "http://twmode.sf.net/") (:keywords "twitter" "web"))]) (geeknote . [(20160717 549) ((emacs (24))) "Use Evernote in Emacs through geeknote" single ((:commit . "8ed607c76864afcc9c338972ab093caf4501cbf8") (:url . "http://github.com/avendael/emacs-geeknote") (:keywords "evernote" "geeknote" "note" "emacs-evernote" "evernote-mode"))]) (spotify . [(20170302 2229) ((cl-lib (0 5))) "Control the spotify application from emacs" single ((:commit . "2825b5cac8406969405096660aeab6e5fef765eb") (:url . "https://github.com/remvee/spotify-el") (:keywords "convenience"))]) (multi . [(20131013 844) ((emacs (24))) "Clojure-style multi-methods for emacs lisp" single ((:commit . "0987ab71692717ed457cb3984de184db9185806d") (:url . "http://github.com/kurisuwhyte/emacs-multi") (:keywords "multimethod" "generic" "predicate" "dispatch"))]) (helm-spotify . [(20160905 1447) ((helm (0 0 0)) (multi (2 0 0))) "Control Spotify with Helm." single ((:commit . "f7a62d1ff88e3127de9be7cd3e818b0a92268ab3") (:url . "https://github.com/krisajenkins/helm-spotify") (:keywords "helm" "spotify"))]) (xml-rpc . [(20160430 1458) nil "An elisp implementation of clientside XML-RPC" single ((:commit . "0ab093d60140d19e31d217c8abdc7dbdac944486") (:url . "http://github.com/hexmode/xml-rpc-el") (:keywords "xml" "rpc" "network"))]) (confluence . [(20151020 1828) ((xml-rpc (1 6 4))) "Emacs mode for interacting with confluence wikis" tar ((:commit . "4518d270a07760644c4204985c83d234ece4738b") (:url . "http://code.google.com/p/confluence-el/") (:keywords "confluence" "wiki" "xmlrpc"))]) (ace-jump-mode . [(20140616 115) nil "a quick cursor location minor mode for emacs" single ((:commit . "8351e2df4fbbeb2a4003f2fb39f46d33803f3dac") (:url . "https://github.com/winterTTr/ace-jump-mode/") (:keywords "motion" "location" "cursor"))]) (elfeed-goodies . [(20160926 209) ((popwin (1 0 0)) (powerline (2 2)) (elfeed (2 0 0)) (cl-lib (0 5)) (noflet (0 0 10)) (ace-jump-mode (2 0))) "Elfeed goodies" tar ((:commit . "f3f2595c845a8001d1bb28a185cc05cf984998ef") (:url . "https://github.com/algernon/elfeed-goodies"))]) (elfeed-org . [(20170423 128) ((elfeed (1 1 1)) (org (8 2 7)) (dash (2 10 0)) (s (1 9 0)) (cl-lib (0 5))) "Configure elfeed with one or more org-mode files" single ((:commit . "a54649f0fd83fd536213f58ee4268c67a799293a") (:url . "https://github.com/remyhonig/elfeed-org") (:keywords "news"))]) (elfeed . [(20171001 1900) ((emacs (24 3))) "an Emacs Atom/RSS feed reader" tar ((:commit . "f343cfa93b7d91024496b8b7f46280762fe86659"))]) (elfeed-web . [(20170709 954) ((simple-httpd (1 4 3)) (elfeed (1 4 0)) (emacs (24 1))) "web interface to Elfeed" tar ((:commit . "be103de2ecf6d34a1a8417f4af1f1daafbbc6918"))]) (wakatime-mode . [(20170517 2053) nil "Automatic time tracking extension for WakaTime" single ((:commit . "b1eae15f38a367017e519c10837c44650631b154") (:keywords "calendar" "comm"))]) (feature-mode . [(20170907 748) nil "Major mode for editing Gherkin (i.e. Cucumber) user stories" tar ((:commit . "722b352c4f0b800a9356dd369c79612782b3b847"))]) (inflections . [(20170913 216) ((cl-lib (0 5)) (emacs (24))) "convert english words between singular and plural" single ((:commit . "e4f1372cf22e811faca52fc86bdd5d817498a4d8") (:url . "https://github.com/eschulte/jump.el") (:keywords "languages" "tools" "wp"))]) (projectile-rails . [(20170901 47) ((emacs (24 3)) (projectile (0 12 0)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0)) (rake (0 3 2))) "Minor mode for Rails projects based on projectile-mode" single ((:commit . "31c9f90d472e07cb8e49fa8992b187b67c9c9a71") (:url . "https://github.com/asok/projectile-rails") (:keywords "rails" "projectile"))]) (pony-mode . [(20170807 822) nil "Minor mode for working with Django Projects" tar ((:commit . "760684d30b6c234d1b88c9a4673a808f36f7f341"))]) (merlin . [(20170917 430) nil "Mode for Merlin, an assistant for OCaml." tar ((:commit . "a5dbf8e321ff162476555e62264468dd6f55c279") (:url . "https://github.com/ocaml/merlin") (:keywords "ocaml" "languages"))]) (ocp-indent . [(20170803 222) nil "automatic indentation with ocp-indent" single ((:commit . "002e047d848beb0e0b77538f0674dd171efc9d66") (:url . "http://www.typerex.org/ocp-indent.html") (:keywords "ocaml" "languages"))]) (caml . [(20171020 1013) nil "OCaml code editing commands for Emacs" tar ((:commit . "09e545e159c5166ae374ab505f4c1b66fb3ec6fd") (:url . "https://github.com/ocaml/ocaml/") (:keywords "ocaml"))]) (tuareg . [(20171016 910) ((caml (3 12 0 1))) "OCaml mode for Emacs." tar ((:commit . "64537bc753094b2adc2e3e97625fa9c0a01f9ae6") (:url . "https://github.com/ocaml/tuareg") (:keywords "ocaml" "languages"))]) (utop . [(20170508 2343) ((emacs (24))) "Universal toplevel for OCaml" single ((:commit . "5ca193128c10f6af877c174ec0a9029782f0ef50") (:url . "https://github.com/diml/utop") (:keywords "ocaml" "languages"))]) (geiser . [(20171010 1610) nil "GNU Emacs and Scheme talk to each other" tar ((:commit . "c266950549a7a0841bf21e092fba632a1e061187") (:url . "http://www.nongnu.org/geiser/"))]) (plantuml-mode . [(20170819 1033) nil "Major mode for PlantUML" single ((:commit . "fce628885b54635b0287b3337626752b2725369d") (:keywords "uml" "plantuml" "ascii"))]) (powershell . [(20161103 2354) ((emacs (24))) "Mode for editing Powershell scripts" single ((:commit . "3c09e1b87064bedc065e45346fd4c3e051eeb0f0") (:url . "http://github.com/jschaf/powershell.el") (:keywords "powershell" "languages"))]) (company-plsense . [(20171016 1013) ((company (0 9 3)) (cl-lib (0 5 0)) (dash (2 12 0)) (s (1 12)) (emacs (24))) "Company backend for Perl" single ((:commit . "68dd1ca0a0837990a2e6c2e36f6b10fdf4a9bb6d") (:url . "https://github.com/CeleritasCelery/company-plsense"))]) (company-glsl . [(20171015 1049) ((company (0 9 4)) (glsl-mode (2 0)) (emacs (24 4))) "Support glsl in company-mode" single ((:commit . "a262c12c3bcd0807718c4edcaf2b054e30ef0e26") (:url . "https://github.com/guidoschmidt/company-glsl"))]) (cuda-mode . [(20151213 1921) nil "NVIDIA CUDA Major Mode" single ((:commit . "9ae9eacfdba3559b5456342d0d03296290df8ff5") (:keywords "c" "languages"))]) (glsl-mode . [(20170927 736) nil "major mode for Open GLSL shader files" single ((:commit . "384968506cf25c5c2df61b32fdfdbd041e3bf651") (:url . "http://artis.inrialpes.fr/~Xavier.Decoret/resources/glsl-mode/") (:keywords "languages"))]) (opencl-mode . [(20170816 549) nil "Syntax coloring for opencl kernels" single ((:commit . "6e69434d0fa6e11a542acad370611bba18d3bc5c") (:url . "https://github.com/salmanebah/opencl-mode") (:keywords "c" "opencl"))]) (nasm-mode . [(20161216 736) ((emacs (24 3))) "NASM x86 assembly major mode" single ((:commit . "d990ed94d902b74a5c834fb567e03307607cee45") (:url . "https://github.com/skeeto/nasm-mode"))]) (x86-lookup . [(20161215 448) ((emacs (24 3)) (cl-lib (0 3))) "jump to x86 instruction documentation" single ((:commit . "544a1ad4e8551c60e58e6c431470b6ef4ce7c5cb") (:url . "https://github.com/skeeto/x86-lookup"))]) (company-go . [(20170825 943) ((company (0 8 0)) (go-mode (1 0 0))) "company-mode backend for Go (using gocode)" single ((:commit . "e990796e68a2ebfc099afed20b99e26d6b64061a") (:keywords "languages"))]) (flycheck-gometalinter . [(20170321 732) ((emacs (24)) (flycheck (0 22))) "flycheck checker for gometalinter" single ((:commit . "c90ea1aba80ddfdf603c9ba731be302400fd6ba2") (:url . "https://github.com/favadi/flycheck-gometalinter") (:keywords "convenience" "tools" "go"))]) (go-eldoc . [(20170305 627) ((emacs (24 3)) (go-mode (1 0 0))) "eldoc for go-mode" single ((:commit . "cbbd2ea1e94a36004432a9ac61414cb5a95a39bd") (:url . "https://github.com/syohex/emacs-go-eldoc"))]) (go-guru . [(20170718 1046) ((go-mode (1 3 1)) (cl-lib (0 5))) "Integration of the Go 'guru' analysis tool into Emacs." single ((:commit . "7eb5b3dd0ac31d176e9d56da4172f66aef8fae47") (:keywords "tools"))]) (go-mode . [(20170726 555) nil "Major mode for the Go programming language" single ((:commit . "7eb5b3dd0ac31d176e9d56da4172f66aef8fae47") (:url . "https://github.com/dominikh/go-mode.el") (:keywords "languages" "go"))]) (go-rename . [(20161117 331) ((go-mode (1 3 1))) "Integration of the 'gorename' tool into Emacs." single ((:commit . "7eb5b3dd0ac31d176e9d56da4172f66aef8fae47") (:keywords "tools"))]) (godoctor . [(20161205 143) nil "Frontend for godoctor" single ((:commit . "f892a4dbabe61186540d6035c5185fd929a6a543") (:url . "https://github.com/microamp/godoctor.el") (:keywords "go" "golang" "refactoring"))]) (faceup . [(20170925 1246) nil "Markup language for faces and font-lock regression testing" single ((:commit . "6c92dad56a133e14e7b27831e1bcf9b3a71ff154") (:url . "https://github.com/Lindydancer/faceup") (:keywords "faces" "languages"))]) (racket-mode . [(20170913 534) ((emacs (24 3)) (faceup (0 0 2)) (s (1 9 0))) "Major mode for Racket language." tar ((:commit . "33877b1bb24faea68842e0396bd5718b84e47451") (:url . "https://github.com/greghendershott/racket-mode"))]) (arduino-mode . [(20151017 2335) nil "Major mode for the Arduino language" single ((:commit . "3e2bad4569ad26e929e6db2cbcff0d6d36812698") (:keywords "languages" "arduino"))]) (kivy-mode . [(20160902 1041) nil "Emacs major mode for editing Kivy files" single ((:commit . "66e0ffabce849faa982ab3f2f239d9345a645be3"))]) (matlab-mode . [(20160902 459) nil "Major mode for MATLAB(R) dot-m files" tar ((:commit . "3b3c48ac0c27039e0bef89c643f0ee4c0b53d3d0") (:url . "http://sourceforge.net/projects/matlab-emacs/") (:keywords "matlab" "programming" "language" "(X)emacs"))]) (pkgbuild-mode . [(20151010 736) nil "Interface to the ArchLinux package manager" single ((:commit . "7369ab3c6b59cfdf2ecd2b32ad96ce006e766fa0"))]) (qml-mode . [(20161015 1731) nil "Major mode for editing QT Declarative (QML) code." single ((:commit . "6c5f33ba88ae010bf201a80ee8095e20a724558c") (:url . "https://github.com/coldnew/qml-mode") (:keywords "qml" "qt" "qt declarative"))]) (scad-mode . [(20170219 2003) nil "A major mode for editing OpenSCAD code" single ((:commit . "d6a3034ecb5be6d321b4a7c2358184752ebddcfc") (:url . "https://raw.github.com/openscad/openscad/master/contrib/scad-mode.el") (:keywords "languages"))]) (stan-mode . [(20161023 1958) nil "Major mode for editing Stan files" tar ((:commit . "45b8242611fe0437fcff48f5f4f7d8f0552531ac") (:url . "http://github.com/stan-dev/stan-mode") (:keywords "languanges"))]) (thrift . [(20140312 1348) nil "Major mode for Apache Thrift files" single ((:commit . "43f4bf2fdd13c7466e3fea690d436c6a9540f303") (:keywords "files"))]) (vala-mode . [(20150324 1525) nil "Vala mode derived mode" single ((:commit . "fb2871a4492d75d03d72e60474919ab89adb267b") (:keywords "vala" "languages" "oop"))]) (vala-snippets . [(20150428 2052) ((yasnippet (0 8 0))) "Yasnippets for Vala" tar ((:commit . "671439501060449bd100b9fffd524a86064fbfbb") (:url . "https://github.com/gopar/vala-snippets"))]) (flycheck-nim . [(20160714 2128) ((dash (2 4 0)) (flycheck (0 20))) "Defines a flycheck syntax checker for nim" single ((:commit . "6d27349b66e44578851e6148299709d64d2bde41") (:url . "https://github.com/ALSchwalm/flycheck-nim"))]) (flycheck-nimsuggest . [(20171027 1508) ((flycheck (0 23)) (emacs (24 3))) "flycheck backend for Nim using nimsuggest" single ((:commit . "dc9a5de1cb3ee05db5794d824610959a1f603bc9") (:url . "https://github.com/yuutayamada/flycheck-nimsuggest"))]) (commenter . [(20160219 827) ((emacs (24 4)) (let-alist (1 0 4))) "multiline-comment support package" single ((:commit . "6d1885419434ba779270c6fda0e30d390bb074bd") (:url . "https://github.com/yuutayamada/commenter") (:keywords "comment"))]) (epc . [(20140609 2234) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar ((:commit . "e1bfa5ca163273859336e3cc89b4b6460f7f8cda") (:url . "https://github.com/kiwanami/emacs-epc") (:keywords "lisp" "rpc"))]) (concurrent . [(20161228 1930) ((emacs (24 3)) (deferred (0 5 0))) "Concurrent utility functions for emacs lisp" single ((:commit . "2239671d94b38d92e9b28d4e12fd79814cfb9c16") (:url . "https://github.com/kiwanami/emacs-deferred/blob/master/README-concurrent.markdown") (:keywords "deferred" "async" "concurrent"))]) (nim-mode . [(20171027 458) ((emacs (24 4)) (epc (0 1 1)) (let-alist (1 0 1)) (commenter (0 5 1)) (flycheck-nimsuggest (0 8 1))) "A major mode for the Nim programming language" tar ((:commit . "845149574ea95d2661db1cf90ff2b49b5c66f98c") (:keywords "nim" "languages"))]) (alchemist . [(20170803 414) ((elixir-mode (2 2 5)) (dash (2 11 0)) (emacs (24 4)) (company (0 8 0)) (pkg-info (0 4)) (s (1 11 0))) "Elixir tooling integration into Emacs" tar ((:commit . "8ea2db4781e367c1cf8ce2eec4222daa7d1b7b57") (:url . "http://www.github.com/tonini/alchemist.el") (:keywords "languages" "elixir" "elixirc" "mix" "hex" "alchemist"))]) (elixir-mode . [(20170918 2231) ((emacs (24)) (pkg-info (0 4))) "Major mode for editing Elixir files" tar ((:commit . "861788186f4dbd500209656dcf38a15b3efe74dd") (:url . "https://github.com/elixir-lang/emacs-elixir") (:keywords "languages" "elixir"))]) (flycheck-mix . [(20170118 630) ((flycheck (27)) (elixir-mode (1 8 0))) "Elixir mix flycheck integration" single ((:commit . "76684d4b5987925b98b254aab656f8bf8198ab88") (:url . "https://github.com/tomekowal/flycheck-mix") (:keywords "elixir" "flycheck" "mix"))]) (flycheck-credo . [(20170526 845) ((flycheck (29))) "flycheck checker for elixir credo" single ((:commit . "e88f11ead53805c361ec7706e44c3dfee1daa19f") (:url . "https://github.com/aaronjensen/flycheck-credo"))]) (ob-elixir . [(20170725 719) ((org (8))) "org-babel functions for elixir evaluation" single ((:commit . "8990a8178b2f7bd93504a9ab136622aab6e82e32") (:url . "http://github.com/zweifisch/ob-elixir") (:keywords "org" "babel" "elixir"))]) (disaster . [(20171016 1452) nil "Disassemble C/C++ code under cursor in Emacs" single ((:commit . "10a785facc60d89d78e0d5177985ab1af1741bb4") (:url . "https://github.com/jart/disaster") (:keywords "tools"))]) (clang-format . [(20170120 137) ((cl-lib (0 3))) "Format code using clang-format" single ((:commit . "6e6114fac0e4e600f1ffed7b2ce978f7adb001cd") (:keywords "tools" "c"))]) (levenshtein . [(20090830 340) nil "Edit distance between two strings." single ((:commit . "070925197ebf6b704e6e00c4f2d2ec783f3df38c") (:keywords "lisp"))]) (cmake-ide . [(20171017 608) ((emacs (24 4)) (cl-lib (0 5)) (seq (1 11)) (levenshtein (0)) (s (1 11 0))) "Calls CMake to find out include paths and other compiler flags" single ((:commit . "cfdf8522159882a3e07bfa1f648b07d807afb650") (:url . "http://github.com/atilaneves/cmake-ide") (:keywords "languages"))]) (cmake-mode . [(20160928 505) nil "major-mode for editing CMake sources" single ((:commit . "ced94bcbd91b9ff486367f5187cf5760c02a707b"))]) (company-c-headers . [(20170531 1330) ((emacs (24 1)) (company (0 8))) "Company mode backend for C/C++ header files" single ((:commit . "e959d43bebf0a524f7378669983a39ee1379cc21") (:keywords "development" "company"))]) (company-ycmd . [(20171010 2258) ((ycmd (1 3)) (company (0 9 3)) (deferred (0 5 1)) (s (1 11 0)) (dash (2 13 0)) (let-alist (1 0 5)) (f (0 19 0))) "company-mode backend for ycmd" single ((:commit . "cb3f10e06b93e7e9b8bc0a43b4f3a7e13df0b18a") (:url . "https://github.com/abingham/emacs-ycmd"))]) (test-simple . [(20170527 832) ((cl-lib (0))) "Simple Unit Test Framework for Emacs Lisp" single ((:commit . "b3b69f52207d3a8111421ad7ab9ed82abbe85316") (:url . "http://github.com/rocky/emacs-test-simple") (:keywords "unit-test"))]) (loc-changes . [(20160801 1008) nil "keep track of positions even after buffer changes" single ((:commit . "4d1dcdf7631c23b1259ad4f72bf9686cf95fb46c") (:url . "http://github.com/rocky/emacs-loc-changes"))]) (load-relative . [(20170526 310) nil "relative file load (within a multi-file Emacs package)" tar ((:commit . "738896e3da491b35399178ed2c6bc92cc728d119") (:url . "http://github.com/rocky/emacs-load-relative") (:keywords "internal"))]) (realgud . [(20171006 1840) ((load-relative (1 2)) (loc-changes (1 2)) (test-simple (1 2 0)) (cl-lib (0 5)) (emacs (24))) "A modular front-end for interacting with external debuggers" tar ((:commit . "081f7edc79a8e510d47e10c6ce4306b2f850df1f") (:url . "http://github.com/realgud/realgud/") (:keywords "gdb" "python" "perl" "go" "bash" "nodejs" "zsh" "bashdb" "zshdb" "remake" "make" "trepan" "perldb"))]) (auctex-latexmk . [(20170618 936) ((auctex (11 87))) "Add LatexMk support to AUCTeX" single ((:commit . "4d353522650d7685acbf1d38f7dbc504f734bd84") (:url . "https://github.com/tom-tan/auctex-latexmk/") (:keywords "tex"))]) (auctex . [(11 91 0) nil "Integrated environment for *TeX*" tar ((:url . "http://www.gnu.org/software/auctex/"))]) (company-auctex . [(20161025 24) ((yasnippet (0 8 0)) (company (0 8 0)) (auctex (11 87))) "Company-mode auto-completion for AUCTeX" single ((:commit . "d3727c9f5bb13c52b4a345bc8f895d3dbd9178b3") (:url . "https://github.com/alexeyr/company-auctex/"))]) (magic-latex-buffer . [(20170530 1705) ((cl-lib (0 5)) (emacs (24 3))) "Magically enhance LaTeX-mode font-locking for semi-WYSIWYG editing" single ((:commit . "c03277d5619d9adcd871f3e6480a1a27985810cb") (:url . "http://hins11.yu-yake.com/"))]) (typo . [(20171005 1045) nil "Minor mode for typographic editing" single ((:commit . "73c8d960e9dcbb77a4ad6166b4685122a0f208ee") (:url . "https://github.com/jorgenschaefer/typoel") (:keywords "convenience" "wp"))]) (cargo . [(20171026 13) ((emacs (24 3)) (rust-mode (0 2 0))) "Emacs Minor Mode for Cargo, Rust's Package Manager." tar ((:commit . "3ecf0b89b3d36874a301a7e2fb429fc026c73f35") (:keywords "tools"))]) (racer . [(20170218 516) ((emacs (24 3)) (rust-mode (0 2 0)) (dash (2 13 0)) (s (1 10 0)) (f (0 18 2))) "code completion, goto-definition and docs browsing for Rust via racer" single ((:commit . "6e0d1b3ebd54497c0cc995a92f09328ff101cd33") (:url . "https://github.com/racer-rust/emacs-racer") (:keywords "abbrev" "convenience" "matching" "rust" "tools"))]) (flycheck-rust . [(20170404 842) ((emacs (24 1)) (flycheck (0 20)) (dash (2 13 0)) (seq (2 15)) (let-alist (1 0 4))) "Flycheck: Rust additions and Cargo support" single ((:commit . "a89c0298f5e8fdcb0c33833ca1eca64632cec053") (:url . "https://github.com/flycheck/flycheck-rust") (:keywords "tools" "convenience"))]) (rust-mode . [(20171013 258) ((emacs (24 0))) "A major emacs mode for editing Rust source code" single ((:commit . "b8e49089713714a9f3f815b399df569a0e507e73") (:url . "https://github.com/rust-lang/rust-mode") (:keywords "languages"))]) (toml-mode . [(20161107 1000) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing TOML files" single ((:commit . "f6c61817b00f9c4a3cab1bae9c309e0fc45cdd06") (:url . "https://github.com/dryman/toml-mode.el") (:keywords "data" "toml"))]) (purescript-mode . [(20170926 242) nil "A PureScript editing mode" tar ((:commit . "e2d6519a9669a1443db1040cf098bc3ea30ec861"))]) (psci . [(20171011 50) ((purescript-mode (13 10)) (dash (2 9 0)) (s (1 9 0)) (f (0 17 1))) "Major mode for purescript repl psci" tar ((:commit . "5360b244c588ed2f2a5bb86180cb5d4deb2216de") (:url . "https://github.com/ardumont/emacs-psci") (:keywords "purescript" "psci" "repl" "major" "mode"))]) (psc-ide . [(20171027 1405) ((dash (2 13 0)) (dash-functional (1 2 0)) (company (0 8 7)) (cl-lib (0 5)) (s (1 10 0)) (emacs (24 4)) (flycheck (0 24)) (let-alist (1 0 4)) (seq (1 11))) "Minor mode for PureScript's psc-ide tool." tar ((:commit . "75f0721162e2bd47bd6fa5eb41505c942aab69f4") (:url . "https://github.com/epost/psc-ide-emacs") (:keywords "languages"))]) (erlang . [(20170913 604) ((emacs (24 1))) "Erlang major mode" tar ((:commit . "d0875a87fc59bea515294455b2047040118f3a7e"))]) (company-quickhelp . [(20170429 1052) ((emacs (24 3)) (company (0 8 9)) (pos-tip (0 4 6))) "Popup documentation for completion candidates" single ((:commit . "432c62f034a5097d3f85d7f54afcdc016d7afa12") (:url . "https://www.github.com/expez/company-quickhelp") (:keywords "company" "popup" "documentation" "quickhelp"))]) (fsharp-mode . [(20171021 431) ((company (0 8 0)) (company-quickhelp (1 2 0)) (popup (0 5 3)) (pos-tip (0 4 5)) (s (1 3 1)) (dash (1 1 0)) (flycheck (0 25))) "F# mode for Emacs" tar ((:commit . "5504550605354146842c8f5c34482ece778b7b31"))]) (elm-mode . [(20171023 1113) ((f (0 17)) (let-alist (1 0 4)) (s (1 7 0)) (emacs (24 4))) "Major mode for Elm" tar ((:commit . "d4af45e79a8661cefd44b3d8a697dca65f609df1") (:url . "https://github.com/jcollard/elm-mode"))]) (flycheck-elm . [(20160717 257) ((flycheck (0 29 -3)) (emacs (24 4))) "Flycheck support for the elm language" single ((:commit . "b401873ebd2176190a0a6fb4d61c2cca97d3b9fb") (:url . "https://github.com/bsermons/flycheck-elm"))]) (cmm-mode . [(20150224 2346) nil "Major mode for C-- source code" single ((:commit . "c3ad514dff3eb30434f6b20d953276d4c00de1ee"))]) (company-cabal . [(20170917 617) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24))) "company-mode cabal backend" tar ((:commit . "62112a7259e24bd6c08885629a185afe512b7d3d") (:url . "https://github.com/iquiw/company-cabal"))]) (company-ghci . [(20160310 1800) ((company (0 8 11)) (haskell-mode (13))) "company backend which uses the current ghci process." single ((:commit . "c2d74a41166e76de2e78c87f582ba3a1179b2aa6"))]) (company-ghc . [(20170918 133) ((cl-lib (0 5)) (company (0 8 0)) (ghc (5 4 0 0)) (emacs (24))) "company-mode ghc-mod backend" single ((:commit . "dab111cb5067c545ccdc6b2d0ba70c1c4bbce060") (:url . "https://github.com/iquiw/company-ghc") (:keywords "haskell" "completion"))]) (flycheck-haskell . [(20171022 958) ((emacs (24 3)) (flycheck (0 25)) (haskell-mode (13 7)) (dash (2 4 0)) (seq (1 11)) (let-alist (1 0 1))) "Flycheck: Automatic Haskell configuration" tar ((:commit . "ab2e4f9b5ce4665a9b00c3e16dc8ecce30c99d01") (:url . "https://github.com/flycheck/flycheck-haskell") (:keywords "tools" "convenience"))]) (ghc . [(20170613 1212) ((haskell-mode (13 0))) "Sub mode for Haskell mode" tar ((:commit . "0d13786a4cc413cf12de0ace9ba6f43ddd7a032b"))]) (haskell-snippets . [(20160918 1722) ((cl-lib (0 5)) (yasnippet (0 8 0))) "Yasnippets for Haskell" tar ((:commit . "07b0f460b946fd1be26c29652cb0468b47782f3a") (:url . "https://github.com/haskell/haskell-snippets") (:keywords "snippets" "haskell"))]) (helm-hoogle . [(20161026 2234) ((helm (1 6 2)) (emacs (24 4))) "Use helm to navigate query results from Hoogle" single ((:commit . "73969a9d46d2121a849a01a9f7ed3636d01f7bbc") (:url . "https://github.com/jwiegley/haskell-config") (:keywords "haskell" "programming" "hoogle"))]) (hindent . [(20170609 126) ((cl-lib (0 5))) "Indent haskell code using the \"hindent\" program" single ((:commit . "578d1256e466eb8bf40fd7e441172eb12e878637") (:url . "https://github.com/chrisdone/hindent"))]) (hlint-refactor . [(20170817 2148) nil "Apply HLint suggestions" single ((:commit . "92c69aa01c65968e86c15db087bb1ea785e4736c") (:url . "https://github.com/mpickering/hlint-refactor-mode") (:keywords "haskell" "refactor"))]) (intero . [(20171023 1102) ((flycheck (0 25)) (company (0 8)) (emacs (24 4)) (haskell-mode (13 0))) "Complete development mode for Haskell" single ((:commit . "5697c86fde2b6131629e8d1c69f9b2363dadc7ae") (:url . "https://github.com/commercialhaskell/intero") (:keywords "haskell" "tools"))]) (haskell-mode . [(20171022 26) ((emacs (24 3))) "A Haskell editing mode" tar ((:commit . "9018ad5cac0b1b1b5e0a51586027fb0ca4076b1a") (:keywords "haskell" "cabal" "ghc" "repl") (:url . "https://github.com/haskell/haskell-mode"))]) (dante . [(20171021 1009) ((dash (2 13 0)) (emacs (25 1)) (f (0 19 0)) (flycheck (0 30)) (haskell-mode (13 14)) (s (1 11 0))) "Development mode for Haskell" single ((:commit . "cdea9409920ed8e4739af39b9a6f4e6dd8e8c50f") (:url . "https://github.com/jyp/dante") (:keywords "haskell" "tools"))]) (drupal-mode . [(20170926 38) ((php-mode (1 5 0))) "Advanced minor mode for Drupal development" tar ((:commit . "b0ca2c39650136f7e5672461e64397b9add30b92") (:url . "https://github.com/arnested/drupal-mode") (:keywords "programming" "php" "drupal"))]) (php-auto-yasnippets . [(20170330 1814) ((php-mode (1 11)) (yasnippet (0 8 0))) "Creates snippets for PHP functions" tar ((:commit . "03e1f0899c081813901ac15c2f7a675a37cca9f5") (:url . "https://github.com/ejmr/php-auto-yasnippets"))]) (phpcbf . [(20150302 528) ((s (1 9 0))) "Format PHP code in Emacs using PHP_CodeSniffer's phpcbf" single ((:commit . "b556b548ceb061b002389d6165d2cc63d8bddb5d") (:url . "https://github.com/nishimaki10/emacs-phpcbf") (:keywords "tools" "php"))]) (phpunit . [(20161219 320) ((s (1 9 0)) (f (0 16 0)) (pkg-info (0 5)) (cl-lib (0 5)) (emacs (24 3))) "Launch PHP unit tests using phpunit" tar ((:commit . "5ca5ee53e16b2cf0939dbeacbf1dffa13b41b48f") (:url . "https://github.com/nlamirault/phpunit.el") (:keywords "php" "tests" "phpunit"))]) (ac-php-core . [(20171022 808) ((emacs (24)) (dash (1)) (php-mode (1)) (xcscope (1)) (s (1)) (f (0 17 0)) (popup (0 5 0))) "gen tags for php" tar ((:commit . "317ad1d023db6b2fe67444a2c075e656c35f5094") (:url . "https://github.com/xcwen/ac-php") (:keywords "completion" "convenience" "intellisense"))]) (xcscope . [(20160628 2324) nil "cscope interface for (X)Emacs" single ((:commit . "1e4c8e60eb841a3ecb56ff4115b6a8ae5c0bf779") (:url . "https://github.com/dkogan/xcscope.el") (:keywords "languages" "c"))]) (php-mode . [(20171018 1236) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing PHP code" tar ((:commit . "0e87a708fb0cf7bb5ad88baf08bd60e061e8b63c") (:url . "https://github.com/ejmr/php-mode"))]) (company-php . [(20170314 2141) ((cl-lib (0 5)) (ac-php-core (1)) (company (0 9))) "company completion source for php" single ((:commit . "317ad1d023db6b2fe67444a2c075e656c35f5094") (:url . "https://github.com/xcwen/ac-php") (:keywords "completion" "convenience" "intellisense"))]) (skewer-mode . [(20170730 1241) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar ((:commit . "7df248a4b7ec2eb0f3cabcbdfb052593d1f86590"))]) (cl-generic . [(0 3) nil "Forward cl-generic compatibility for Emacs<25" single ((:url . "http://elpa.gnu.org/packages/cl-generic.html") (:keywords))]) (js2-mode . [(20171014 1229) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar ((:commit . "dd295e838d3878188b1797b82a86867e3e56d22c") (:url . "https://github.com/mooz/js2-mode/") (:keywords "languages" "javascript"))]) (simple-httpd . [(20171004 938) ((cl-lib (0 3))) "pure elisp HTTP server" single ((:commit . "e7775d3bc5c6b73255814d0a62dc954e23a12c15") (:url . "https://github.com/skeeto/emacs-http-server"))]) (ein . [(20171024 1043) ((websocket (1 7)) (auto-complete (1 4 0)) (request (0 3)) (deferred (0 5)) (request-deferred (0 2 0)) (cl-generic (0 3)) (dash (2 13 0)) (s (1 11 0)) (skewer-mode (1 6 2))) "Emacs IPython Notebook" tar ((:commit . "eaded1e01378c61be8bc454d111e8cc4951a0b5b"))]) (company-lua . [(20161227 1139) ((company (0 8 12)) (s (1 10 0)) (f (0 17 0)) (lua-mode (20151025))) "Company backend for Lua" tar ((:commit . "0be8122f3adf57ad27953bf4b03545d6298d3da4"))]) (lua-mode . [(20170130 435) nil "a major-mode for editing Lua scripts" tar ((:commit . "652e299cb967fccca827dda381d61a9c144d97de") (:url . "http://immerrr.github.com/lua-mode") (:keywords "languages" "processes" "tools"))]) (faust-mode . [(20170908 542) nil "Faust syntax colorizer for Emacs." single ((:commit . "0f099007574d1430bb0cf73f73dcc284d9d3a190") (:url . "https://github.com/rukano/emacs-faust-mode") (:keywords "languages" "faust"))]) (flycheck-perl6 . [(20150414 1832) ((emacs (24 3)) (flycheck (0 22))) "Perl 6 support in Flycheck" single ((:commit . "6a9a929ffb58595bbe9fe3d7c2e78617c8e9bb5a") (:url . "https://github.com/hinrik/flycheck-perl6") (:keywords "tools" "convenience"))]) (perl6-mode . [(20161228 430) ((emacs (24 4)) (pkg-info (0 1))) "Major mode for editing Perl 6 code" tar ((:commit . "4867c6d268545f5356111d72c4ae77917d34cb21") (:url . "https://github.com/hinrik/perl6-mode") (:keywords "languages"))]) (key-chord . [(20160227 438) nil "map pairs of simultaneously pressed keys to commands" single ((:commit . "72443e9ff3c4f1c3ccaced3130236801efde3d83") (:keywords "keyboard" "chord" "input"))]) (org-ref . [(20171019 724) ((dash (2 11 0)) (helm (1 5 5)) (helm-bibtex (2 0 0)) (ivy (0 8 0)) (hydra (0 13 2)) (key-chord (0)) (s (1 10 0)) (f (0 18 0)) (emacs (24 4)) (pdf-tools (0 7))) "citations, cross-references and bibliographies in org-mode" tar ((:commit . "3c022af9adb6ff96edcc2f11ebf20cfd576df702") (:url . "https://github.com/jkitchin/org-ref") (:keywords "org-mode" "cite" "ref" "label"))]) (parsebib . [(20170501 347) ((emacs (24 3))) "A library for parsing bib files" single ((:commit . "bc31b627c666df576aa37e21c27a2223b3cb91a3") (:keywords "text" "bibtex"))]) (helm-bibtex . [(20171022 220) ((helm (1 5 5)) (parsebib (1 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5)) (biblio (0 2))) "A bibliography manager based on Helm" tar ((:commit . "5a63cc8f0851078c5ea68872a0bccb2023c05de0"))]) (biblio . [(20161014 1604) ((emacs (24 3)) (biblio-core (0 2))) "Browse and import bibliographic references from CrossRef, arXiv, DBLP, HAL, Dissemin, and doi.org" tar ((:commit . "a5a68fcf677f286f205f32dc7486f6c9f66aa6af"))]) (biblio-core . [(20160901 1115) ((emacs (24 3)) (let-alist (1 0 4)) (seq (1 11)) (dash (2 12 1))) "A framework for looking up and displaying bibliographic entries" single ((:commit . "a5a68fcf677f286f205f32dc7486f6c9f66aa6af") (:url . "http://github.com/cpitclaudel/biblio.el") (:keywords "bib" "tex" "convenience" "hypermedia"))]) (ahk-mode . [(20160320 1521) ((emacs (24 3))) "Major mode for editing AHK (AutoHotkey and AutoHotkey_L)" single ((:commit . "9cfc4840507f6cc8016fdede84ad90df53285359") (:url . "https://github.com/ralesi/ahk-mode") (:keywords "ahk" "autohotkey" "hotkey" "keyboard shortcut" "automation"))]) (markup-faces . [(20141110 17) nil "collection of faces for markup language modes" single ((:commit . "98a807ed82473eb41c6a201ed7ef816d6bcd67b0") (:url . "https://github.com/sensorflo/markup-faces") (:keywords "wp" "faces"))]) (adoc-mode . [(20160314 1430) ((markup-faces (1 0 0))) "a major-mode for editing AsciiDoc files in Emacs" single ((:commit . "745884359a1b8826ede2c4cfd2f0b5478953ac40") (:url . "https://github.com/sensorflo/adoc-mode/wiki") (:keywords "wp" "asciidoc"))]) (noflet . [(20141102 654) nil "locally override functions" single ((:commit . "7ae84dc3257637af7334101456dafe1759c6b68a") (:url . "https://github.com/nicferrier/emacs-noflet") (:keywords "lisp"))]) (scala-mode . [(20170802 432) nil "Major mode for editing Scala" tar ((:commit . "56cba2903cf6e12c715dbb5c99b34c97b2679379") (:url . "https://github.com/ensime/emacs-scala-mode") (:keywords "languages"))]) (sbt-mode . [(20170820 924) ((emacs (24 4))) "Interactive support for sbt projects" tar ((:commit . "bdf31a1ffe637d1445b149804d5f5cc29333a1bd") (:url . "https://github.com/ensime/emacs-sbt-mode") (:keywords "languages"))]) (ctable . [(20171005 1711) nil "Table component for Emacs Lisp" single ((:commit . "b8830d1ca95abb100a81bc32011bd17d5ecba000") (:url . "https://github.com/kiwanami/emacs-ctable") (:keywords "table"))]) (ess-R-data-view . [(20130509 458) ((ctable (20130313 1743)) (popup (20130324 1305)) (ess (20130225 1754))) "Data viewer for GNU R" single ((:commit . "d6e98d3ae1e2a2ea39a56eebcdb73e99d29562e9") (:url . "https://github.com/myuhe/ess-R-data-view.el") (:keywords "convenience"))]) (ess . [(20171022 322) ((julia-mode (0 3))) "Emacs Speaks Statistics" tar ((:commit . "18842ccd794d70444be66a9f1b18ff57a7febddc") (:url . "http://ess.r-project.org"))]) (julia-mode . [(20170916 628) nil "Major mode for editing Julia source code" single ((:commit . "115d4dc8a07445301772da8376b232fa8c7168f4") (:url . "https://github.com/JuliaLang/julia") (:keywords "languages"))]) (ess-smart-equals . [(20150201 2201) ((emacs (24)) (ess (5 0))) "better smart-assignment with =-key in R and S" single ((:commit . "e0f5f18f01ed252fde50d051adf1fa6254a254c9") (:url . "https://github.com/genovese/ess-smart-equals") (:keywords "r" "s" "ess" "convenience"))]) (graphviz-dot-mode . [(20151127 621) nil "Mode for the dot-language used by graphviz (att)." single ((:commit . "fdaabbcc95d9156e3dadc84f81a4750c5b692580") (:url . "http://ppareit.github.com/graphviz-dot-mode/") (:keywords "mode" "dot" "dot-language" "dotlanguage" "graphviz" "graphs" "att"))]) (sml-mode . [(6 7) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing (Standard) ML" single ((:url . "http://elpa.gnu.org/packages/sml-mode.html") (:keywords "sml"))]) (ob-sml . [(20130829 1143) ((sml-mode (6 4))) "org-babel functions for template evaluation" single ((:commit . "958165c92b6cff6cada5c85c8ae5887806b8451b") (:url . "http://orgmode.org") (:keywords "literate programming" "reproducible research"))]) (shut-up . [(20150423 522) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" single ((:commit . "a4fd18f37e20ae991c0dbba821b2c8e6f1679c39") (:url . "http://github.com/rejeep/shut-up.el"))]) (csharp-mode . [(20170927 816) nil "C# mode derived mode" single ((:commit . "331b45df9c6e84601cea323638f82ce5e4a68b03") (:url . "https://github.com/josteink/csharp-mode") (:keywords "c#" "languages" "oop" "mode"))]) (omnisharp . [(20171015 1228) ((emacs (24)) (flycheck (30)) (dash (2 12 0)) (auto-complete (1 4)) (popup (0 5 1)) (csharp-mode (0 8 7)) (cl-lib (0 5)) (s (1 10 0)) (shut-up (0 3 2)) (f (0 19 0))) "Omnicompletion (intellisense) and more for C#" tar ((:commit . "d7a63cd5f592c131615a3b6523fc2b2a04a9f00a") (:url . "https://github.com/Omnisharp/omnisharp-emacs") (:keywords "languages" "csharp" "c#" "ide" "auto-complete" "intellisense"))]) (ttl-mode . [(20160505 132) nil "mode for Turtle (and Notation 3)" single nil]) (sparql-mode . [(20170831 832) ((cl-lib (0 5)) (emacs (25 1))) "Edit and interactively evaluate SPARQL queries." tar ((:commit . "397a0d5b6da3f60ca52bebd5e698b0a764956cd2") (:url . "https://github.com/ljos/sparql-mode"))]) (prop-menu . [(20150728 418) ((emacs (24 3)) (cl-lib (0 5))) "Create and display a context menu based on text and overlay properties" single ((:commit . "50b102c1c0935fd3e0c465feed7f27d66b21cdf3") (:url . "https://github.com/david-christiansen/prop-menu-el") (:keywords "convenience"))]) (idris-mode . [(20170722 1339) ((emacs (24)) (prop-menu (0 1)) (cl-lib (0 5))) "Major mode for editing Idris code" tar ((:commit . "5c01039112a8c52a0275560575f1f542f3966cf5") (:url . "https://github.com/idris-hackers/idris-mode") (:keywords "languages"))]) (forth-mode . [(20170527 1230) nil "Programming language mode for Forth" tar ((:commit . "522256d98d1a909983bcfd3ae20c65226d5929b6") (:url . "http://github.com/larsbrinkhoff/forth-mode") (:keywords "languages" "forth"))]) (company-math . [(20171016 814) ((company (0 8 0)) (math-symbol-lists (1 2))) "Completion backends for unicode math symbols and latex tags" single ((:commit . "3481f03ebb6a613ff85b71ca8edd2d5842c49012") (:url . "https://github.com/vspinu/company-math") (:keywords "unicode" "symbols" "completion"))]) (math-symbol-lists . [(20170221 553) nil "Lists of Unicode math symbols and latex commands" tar ((:commit . "1af8fdcab7941a62287c2d04b8876e1538f39c60") (:url . "https://github.com/vspinu/math-symbol-lists") (:keywords "unicode" "symbols" "mathematics"))]) (company-coq . [(20170615 1842) ((company-math (1 1)) (company (0 8 12)) (yasnippet (0 11 0)) (dash (2 12 1)) (cl-lib (0 5))) "A collection of extensions for Proof General's Coq mode" tar ((:commit . "642c0b5b539692242c476eb00af7bacc91d7fcc0"))]) (popwin . [(20150315 600) nil "Popup Window Manager." single ((:commit . "95dea14c60019d6cccf9a3b33e0dec4e1f22c304") (:keywords "convenience"))]) (company-dcd . [(20170516 210) ((company (0 9)) (flycheck-dmd-dub (0 7)) (yasnippet (0 8)) (popwin (0 7)) (cl-lib (0 5)) (ivy (20160804 326))) "Company backend for Dlang using DCD." single ((:commit . "4832188a9e42287539a69c372fe1643166a6a7aa") (:url . "http://github.com/tsukimizake/company-dcd") (:keywords "languages"))]) (d-mode . [(20161022 717) nil "D Programming Language major mode for (X)Emacs" single ((:commit . "a97c92ced57224287a84e7fc48ba9aac6b2afc08") (:keywords "d" "programming" "language" "emacs" "cc-mode"))]) (flycheck-dmd-dub . [(20170816 648) ((flycheck (0 24)) (f (0 18 2))) "Sets flycheck-dmd-include-paths from dub package information" single ((:commit . "5a2e65fbae90e1dd69cfa78e4af0bda25c7db973") (:url . "http://github.com/atilaneves/flycheck-dmd-dub") (:keywords "languages"))]) (auto-complete . [(20170124 1845) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar ((:commit . "2e83566ddfa758c69afe50b8a1c62a66f47471e3"))]) (auto-complete-rst . [(20140225 144) ((auto-complete (1 4))) "Auto-complete extension for ReST and Sphinx" tar ((:commit . "4803ce41a96224e6fa54e6741a5b5f40ebed7351") (:url . "https://github.com/tkf/auto-complete-rst"))]) (yasnippet . [(20170923 1646) ((cl-lib (0 5))) "Yet another snippet extension for Emacs." tar ((:commit . "35a4df769cbdebd10d043f16d680bdb16ee858ed") (:url . "http://github.com/joaotavora/yasnippet") (:keywords "convenience" "emulation"))]) (common-lisp-snippets . [(20170918 356) ((yasnippet (0 8 0))) "Yasnippets for Common Lisp" tar ((:commit . "cd46223fbc6ee99372a25ba455ffec4354895e45") (:url . "https://github.com/mrkkrp/common-lisp-snippets") (:keywords "snippets"))]) (slime . [(20170929 1441) ((cl-lib (0 5)) (macrostep (0 9))) "Superior Lisp Interaction Mode for Emacs" tar ((:commit . "c5fa94f86b61f3a14a7348b4fa001a0e1c62cef2") (:url . "https://github.com/slime/slime") (:keywords "languages" "lisp" "slime"))]) (macrostep . [(20161120 1306) ((cl-lib (0 5))) "interactive macro expander" tar ((:commit . "424e3734a1ee526a1bd7b5c3cd1d3ef19d184267") (:url . "https://github.com/joddie/macrostep") (:keywords "lisp" "languages" "macro" "debugging"))]) (slime-company . [(20161229 743) ((slime (2 13)) (company (0 9 0))) "slime completion backend for company mode" single ((:commit . "6c244690c80387a32b0cb984843e00c8b75ad6bb") (:keywords "convenience" "lisp" "abbrev"))]) (protobuf-mode . [(20170526 950) nil "major mode for editing protocol buffers." single ((:commit . "e8c9ae120985b4b6056762e23fea41b9b68dfa0e") (:keywords "google" "protobuf" "languages"))]) (bundler . [(20160815 215) ((inf-ruby (2 1)) (cl-lib (0 5))) "Interact with Bundler from Emacs" single ((:commit . "f981f67c33b42243e57a78c358dffff70022b56b") (:url . "http://github.com/endofunky/bundler.el") (:keywords "bundler" "ruby"))]) (chruby . [(20170509 700) ((cl-lib (0 5))) "Emacs integration for chruby" single ((:commit . "3eddd2f5fc2ac979b496394c74e4aee436b64a28") (:url . "https://github.com/plexus/chruby.el") (:keywords "languages"))]) (enh-ruby-mode . [(20170822 1647) ((emacs (24))) "Major mode for editing Ruby files" tar ((:commit . "c1462183573258edfd8134581417d3c95f1c9c4c") (:url . "http://github.com/zenspider/Enhanced-Ruby-Mode") (:keywords "languages elisp" "ruby"))]) (minitest . [(20160628 1120) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" tar ((:commit . "1aadb7865c1dc69c201cecee275751ecec33a182") (:url . "https://github.com/arthurnn/minitest-emacs"))]) (rbenv . [(20141119 2349) nil "Emacs integration for rbenv" single ((:commit . "2ea1a5bdc1266caef1dd77700f2c8f42429b03f1") (:url . "https://github.com/senny/rbenv.el") (:keywords "ruby" "rbenv"))]) (inf-ruby . [(20170615 335) nil "Run a Ruby process in a buffer" single ((:commit . "674a2a837fccea88ada6634e981a656b41d16d8e") (:url . "http://github.com/nonsequitur/inf-ruby") (:keywords "languages" "ruby"))]) (robe . [(20170611 1755) ((inf-ruby (2 5 1)) (emacs (24 4))) "Code navigation, documentation lookup and completion for Ruby" tar ((:commit . "9305fa042c40a32a2fcf60f935c0796dc67b5c55") (:url . "https://github.com/dgutov/robe") (:keywords "ruby" "convenience" "rails"))]) (rspec-mode . [(20171025 1606) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar ((:commit . "94a04f148922852b591957b0b3b22de5c4237448") (:url . "http://github.com/pezra/rspec-mode") (:keywords "rspec" "ruby"))]) (rubocop . [(20170311 2211) ((emacs (24))) "An Emacs interface for RuboCop" single ((:commit . "980bedb455e3551d35a212fae515c054888907c1") (:url . "https://github.com/bbatsov/rubocop-emacs") (:keywords "project" "convenience"))]) (ruby-refactor . [(20160214 850) ((ruby-mode (1 2))) "A minor mode which presents various Ruby refactoring helpers." single ((:commit . "e6b7125878a08518bffec6942df0c606f748e9ee") (:url . "https://github.com/ajvargo/ruby-refactor") (:keywords "refactor" "ruby"))]) (pcre2el . [(20161120 1303) ((emacs (24)) (cl-lib (0 3))) "regexp syntax converter" single ((:commit . "0b5b2a2c173aab3fd14aac6cf5e90ad3bf58fa7d") (:url . "https://github.com/joddie/pcre2el"))]) (ruby-test-mode . [(20171016 931) ((ruby-mode (1 0)) (pcre2el (1 8))) "Minor mode for Behaviour and Test Driven" single ((:commit . "87f6d770f8d2326c8d36099aeee5d577f3e2af69") (:keywords "ruby" "unit" "test" "rspec"))]) (ruby-tools . [(20151209 815) nil "Collection of handy functions for ruby-mode." tar ((:commit . "6b97066b58a4f82eb2ecea6434a0a7e981aa4c18"))]) (rvm . [(20150402 742) nil "Emacs integration for rvm" single ((:commit . "8e45a9bad8e317ff195f384dab14d3402497dc79") (:url . "http://www.emacswiki.org/emacs/RvmEl") (:keywords "ruby" "rvm"))]) (rake . [(20170921 801) ((f (0 13 0)) (dash (1 5 0)) (cl-lib (0 5))) "Run rake commands" single ((:commit . "a27322262ebcce7765574b577000f6f939400206") (:url . "https://github.com/asok/rake.el") (:keywords "rake" "ruby"))]) (sql-indent . [(20170112 1507) nil "indentation of SQL statements" single ((:commit . "761a5724d181b75f30e64040408b8836d41f9db9") (:url . "https://github.com/bsvingen/sql-indent") (:keywords "languages"))]) (sqlup-mode . [(20170610 837) nil "Upcase SQL words for you" single ((:commit . "04970977b4abb4d44301651618bbf1cdb0b263dd") (:url . "https://github.com/trevoke/sqlup-mode.el") (:keywords "sql" "tools" "redis" "upcase"))]) (p4 . [(20150721 1237) nil "Simple Perforce-Emacs Integration" single ((:commit . "eff047caa75dbe4965defca9d1212454cdb755d5") (:url . "https://github.com/gareth-rees/p4.el"))]) (afternoon-theme . [(20140104 1059) ((emacs (24 1))) "Dark color theme with a deep blue background" single ((:commit . "89b1d778a1f8b385775c122f2bd1c62f0fbf931a") (:url . "http://github.com/osener/emacs-afternoon-theme") (:keywords "themes"))]) (alect-themes . [(20170825 1009) ((emacs (24 0))) "Configurable light, dark and black themes for Emacs 24 or later" tar ((:commit . "ded94ab1421994aa863a4d7538ec7453768ec235") (:url . "https://github.com/alezost/alect-themes") (:keywords "color" "theme"))]) (ample-theme . [(20161213 912) nil "Calm Dark Theme for Emacs" tar ((:commit . "8fbae3a9965f933c487f4cfdf2d881753d9feeb1") (:url . "https://github.com/jordonbiondo/ample-theme") (:keywords "theme" "dark"))]) (ample-zen-theme . [(20150119 1354) nil "AmpleZen Theme for Emacs 24" single ((:commit . "b277bb7abd4b6624e8d59f02474b79af50a007bd") (:url . "https://github.com/mjwall/ample-zen") (:keywords "theme" "dark" "emacs 24"))]) (apropospriate-theme . [(20171010 1420) nil "A colorful, low-contrast, light & dark theme set for Emacs with a fun name." tar ((:commit . "b4d5a2fedec176d3562943668609766fab0b23ff") (:keywords "color" "theme") (:url . "https://github.com/waymondo/apropospriate-theme"))]) (anti-zenburn-theme . [(20160725 1559) nil "Low-contrast Zenburn-inverted theme" single ((:commit . "164122ebb7a39c41b953e90fe05cf440c5335d9e") (:url . "https://github.com/m00natic/anti-zenburn-theme"))]) (badwolf-theme . [(20161004 15) ((emacs (24))) "Bad Wolf color theme" single ((:commit . "ea01a3d9358e968f75e3ed15dec6a2a96ce3d9a1") (:url . "https://github.com/bkruczyk/badwolf-emacs") (:keywords "themes"))]) (birds-of-paradise-plus-theme . [(20130419 1429) nil "A brown/orange light-on-dark theme for Emacs 24 (deftheme)." single ((:commit . "bb9f9d4ef7f7872a388ec4eee1253069adcadb6f") (:url . "https://github.com/jimeh/birds-of-paradise-plus-theme.el") (:keywords "themes"))]) (bubbleberry-theme . [(20141017 244) ((emacs (24 1))) "A theme based on LightTable for Emacs24" single ((:commit . "22e9adf4586414024e4592972022ec297321b320") (:url . "https://github.com/jasonm23/emacs-bubbleberry-theme"))]) (busybee-theme . [(20170719 228) nil "port of vim's mustang theme" single ((:commit . "66b2315b030582d0ebee605cf455d386d8c30fcd") (:url . "http://github.com/mswift42/busybee-theme"))]) (cherry-blossom-theme . [(20150621 2042) ((emacs (24 0))) "a soothing color theme for Emacs24." single ((:commit . "eea7653e00f35973857ee23b27bc2fae5e753e50") (:url . "https://github.com/inlinestyle/emacs-cherry-blossom-theme"))]) (clues-theme . [(20161213 327) ((emacs (24 0))) "an Emacs 24 theme which may well be fully awesome..." single ((:commit . "abd61f2b7f3e98de58ca26e6d1230e70c6406cc7") (:url . "https://github.com/emacsfodder/emacs-clues-theme"))]) (color-theme-sanityinc-solarized . [(20160429 1903) nil "A version of Ethan Schoonover's Solarized themes" tar ((:commit . "74a7065808f82dbdd9638ae33ed0e4f7a55da35c"))]) (color-theme-sanityinc-tomorrow . [(20171014 1430) nil "A version of Chris Kempson's various Tomorrow themes" tar ((:commit . "acd7887256a77c07006fb45ebab67f1cd68df2f6"))]) (cyberpunk-theme . [(20170724 924) nil "Cyberpunk Color Theme" single ((:commit . "88eff8a42d6ed8ba7782ae003ec9597aed4fd019") (:keywords "color" "theme" "cyberpunk"))]) (dakrone-theme . [(20170801 1233) nil "dakrone's custom dark theme" single ((:commit . "232ad1be5f3572dcbdf528f1655109aa355a6937") (:url . "https://github.com/dakrone/dakrone-theme") (:keywords "color" "themes" "this" "file" "is" "not" "part" "of" "gnu" "emacs."))]) (darkburn-theme . [(20170423 952) nil "A not-so-low contrast color theme for Emacs." single ((:commit . "0af794ff7fac19778ac8a7efb92455c6f6c2158f") (:url . "http://github.com/gorauskas/darkburn-theme"))]) (darkmine-theme . [(20160405 2324) nil "Yet another emacs dark color theme." single ((:commit . "7f7e82ca03bcad52911fa41fb3e204e32d6ee63e") (:url . "https://github.com/pierre-lecocq/darkmine-theme"))]) (autothemer . [(20170112 1324) ((dash (2 10 0)) (emacs (24)) (cl-lib (0 5))) "Conveniently define themes." single ((:commit . "8c467f57571c154129d660dfccebd151c998f2d9") (:url . "https://github.com/sebastiansturm/autothemer"))]) (darktooth-theme . [(20171010 2057) ((autothemer (0 2))) "From the darkness... it watches" single ((:commit . "e7c13abeeb18f50658482c7df32701ae4ec375a0") (:url . "http://github.com/emacsfodder/emacs-theme-darktooth"))]) (django-theme . [(20131022 202) nil "Custom face theme for Emacs" single ((:commit . "86c8142b3eb1addd94a43aa6f1d98dab06401af0") (:url . "http://github/anrzejsliwa/django-theme"))]) (dracula-theme . [(20170412 845) ((emacs (24))) "Dracula Theme" single ((:commit . "62df5de68c73d34faaa0191a92ce3ebce589bf24") (:url . "https://github.com/dracula/emacs"))]) (espresso-theme . [(20170716 813) nil "Espresso Tutti Colori port for Emacs" single ((:commit . "e79c5c14732b7e34aab75dbcc968839536536c59") (:url . "https://github.com/dgutov/espresso-theme"))]) (exotica-theme . [(20171026 8) ((emacs (24))) "A dark theme with vibrant colors" single ((:commit . "ecbbede8d524f4a2ea675dbdb309176437e6fa3e") (:url . "https://github.com/jbharat/exotica-theme") (:keywords "faces" "theme" "dark" "vibrant colors"))]) (farmhouse-theme . [(20160713 1544) nil "Farmhouse Theme, Emacs edition" tar ((:commit . "7ddc1ff13b4a3d5466bd0d33ecb86100352e83a7") (:keywords "color" "theme") (:url . "https://github.com/mattly/emacs-farmhouse-theme"))]) (flatland-theme . [(20140805 305) nil "A simple theme for Emacs based on the Flatland theme for Sublime Text" single ((:commit . "b2c2df1fc20a3a23787644f91f8121d9353f9bf9") (:url . "http://github.com/gregchapple/flatland-emacs"))]) (flatui-theme . [(20160618 1827) nil "A color theme for Emacs based on flatuicolors.com" single ((:commit . "9c15db5526c15c8dba55023f5698372b19c2a780") (:url . "https://github.com/john2x/flatui-theme.el"))]) (gandalf-theme . [(20130809 247) nil "Gandalf color theme" single ((:commit . "4e472fc851431458537d458d09c1f5895e338536") (:keywords "color" "theme"))]) (grandshell-theme . [(20170507 104) nil "Dark color theme for Emacs > 24 with intensive colors." tar ((:commit . "2f7e607cde9dd38ad4a95f3f3ad6cd85eba09f7b"))]) (gruber-darker-theme . [(20170719 2229) nil "Gruber Darker color theme for Emacs 24." single ((:commit . "8e6bb26ce0abe20e6129ae8c8ad5c41e0832334e") (:url . "http://github.com/rexim/gruber-darker-theme"))]) (hc-zenburn-theme . [(20150928 933) nil "An higher contrast version of the Zenburn theme." single ((:commit . "fd0024a5191cdce204d91c8f1db99ba31640f6e9") (:url . "https:github.com/edran/hc-zenburn-emacs"))]) (hemisu-theme . [(20130508 1144) nil "Hemisu for Emacs." tar ((:commit . "5c206561aa2c844ecdf3e3b672c3235e559ddd7f") (:url . "http://github/anrzejsliwa/django-theme"))]) (heroku-theme . [(20150522 1919) nil "Heroku color theme" single ((:commit . "8083643fe92ec3a1c3eb82f1b8dc2236c9c9691d") (:url . "https://github.com/jonathanchu/color-theme-heroku"))]) (inkpot-theme . [(20170709 1858) nil "port of vim's inkpot theme" single ((:commit . "b992c0996b4a711f3d6ebb6730c6f57edbc75fc5") (:url . "https://github.com/ideasman42/emacs-inkpot-theme") (:keywords "color" "theme"))]) (ir-black-theme . [(20130302 2355) nil "Port of ir-black theme" single ((:commit . "36e930d107604b5763c80294a6f92aaa02e6c272") (:keywords "faces"))]) (jazz-theme . [(20170411 711) nil "A warm color theme for Emacs 24+." single ((:commit . "b1cb78a97cc4050f19d88a89e455c3e52d98240e") (:url . "https://github.com/donderom/jazz-theme"))]) (jbeans-theme . [(20171011 927) ((emacs (24))) "Jbeans theme for GNU Emacs 24 (deftheme)" single ((:commit . "d3cd21b794ba94680f0f3aa574b5029a749430e6") (:url . "https://github.com/synic/jbeans-emacs"))]) (light-soap-theme . [(20150607 745) ((emacs (24))) "Emacs 24 theme with a light background." single ((:commit . "76a787bd40c6b567ae68ced7f5d9f9f10725e00d"))]) (lush-theme . [(20141107 806) ((emacs (24))) "A dark theme with strong colors" single ((:commit . "3b80004f33cdce9f4db69e9ccf2041561e98985d") (:url . "https://github.com/andre-richter/emacs-lush-theme") (:keywords "theme" "dark" "strong colors"))]) (madhat2r-theme . [(20170202 1630) ((emacs (24))) "dark color theme that is easy on the eyes" single ((:commit . "6b387f09de055cfcc15d74981cd4f32f8f9a7323") (:url . "https://github.com/madhat2r/madhat2r-theme") (:keywords "color" "theme"))]) (majapahit-theme . [(20160817 1148) nil "Color theme with a dark and light versions" tar ((:commit . "77c96df7619666b2102d90d452eeadf04adc89a6") (:keywords "color" "theme") (:url . "https://gitlab.com/franksn/majapahit-theme"))]) (material-theme . [(20160908 1538) ((emacs (24 1))) "A Theme based on the colors of the Google Material Design" tar ((:commit . "0890ff69a0fa1f908e79d0f68b1bb3cf0d55af40") (:url . "http://github.com/cpaulik/emacs-material-theme") (:keywords "themes"))]) (minimal-theme . [(20160608 322) nil "A light/dark minimalistic Emacs 24 theme." tar ((:commit . "430e0d3fc2044c16aa9f10961841febbd60df285") (:url . "http://github.com/ikame/minimal-theme") (:keywords "color" "theme" "minimal"))]) (moe-theme . [(20170914 2111) nil "A colorful eye-candy theme. Moe, moe, kyun!" tar ((:commit . "b8f0206614ab40ffb75e50ce6c38675fb9c7cf2e") (:url . "https://github.com/kuanyui/moe-theme.el"))]) (molokai-theme . [(20151016 845) nil "molokai theme with Emacs theme engine" single ((:commit . "04a44f21184b6a26caae4f2c92db9019d883309c") (:url . "https://github.com/alloy-d/color-theme-molokai"))]) (monochrome-theme . [(20140326 350) nil "A dark Emacs 24 theme for your focused hacking sessions" tar ((:commit . "bfca67fe7365310bc47ae9ca96c417caada54896"))]) (mustang-theme . [(20170719 246) nil "port of vim's mustang theme" single ((:commit . "dda6d04803f1c9b196b620ef564e7768fee15de2") (:url . "http://github.com/mswift42/mustang-theme"))]) (naquadah-theme . [(20160819 121) nil "A theme based on Tango color set" single ((:commit . "37e822ccea0ff4a6eb79ea6615a1fd6dc6c72d51"))]) (noctilux-theme . [(20161113 642) ((emacs (24))) "Dark theme inspired by LightTable" single ((:commit . "a3265a1be7f4d73f44acce6d968ca6f7add1f2ca") (:url . "https://github.com/sjrmanning/noctilux-theme"))]) (obsidian-theme . [(20170719 248) nil "port of the eclipse obsidian theme" single ((:commit . "f45efb2ebe9942466c1db6abbe2d0e6847b785ea") (:url . "http://github.com/mswift42/obsidian-theme"))]) (occidental-theme . [(20130312 1258) nil "Custom theme for faces based on Adwaita" single ((:commit . "fd2db7256d4f78c43d99c3cddb1c39106d479816") (:url . "http://github.com/olcai/occidental-theme"))]) (omtose-phellack-theme . [(20161111 1320) nil "A dark theme, with cold bluish touch." tar ((:commit . "66f99633e199e65bd28641626435e8e59246529a"))]) (oldlace-theme . [(20150705 600) ((emacs (24))) "Emacs 24 theme with an 'oldlace' background." single ((:commit . "5c6f437203b0783b36a7aff4a578de4a0c8c4ee6"))]) (organic-green-theme . [(20170720 1111) nil "Low-contrast green color theme." single ((:commit . "eea6b77b7ee26310fd6741b9affc3f2c43be2820"))]) (phoenix-dark-mono-theme . [(20170729 706) nil "Monochromatic version of the Phoenix theme" single ((:commit . "a54f515d162148bcb38676980bc2316adb3d7b8b") (:url . "http://github.com/j0ni/phoenix-dark-mono"))]) (phoenix-dark-pink-theme . [(20170729 703) nil "Originally a port of the Sublime Text 2 theme" single ((:commit . "4defbb76b00c1a29f060813898578152d6be623d") (:url . "http://github.com/j0ni/phoenix-dark-pink"))]) (planet-theme . [(20161030 1917) ((emacs (24))) "A dark theme inspired by Gmail's 'Planets' theme of yore" single ((:commit . "b0a310ff36565fe22224c407cf59569986698a32") (:url . "https://github.com/cmack/emacs-planet-theme") (:keywords "themes"))]) (professional-theme . [(20150315 400) nil "Emacs port of Vim's professional theme" single ((:commit . "0927d1474049a193f9f366bde5eb1887b9ba20ed") (:url . "https://github.com/juanjux/emacs-professional-theme") (:keywords "theme" "light" "professional"))]) (purple-haze-theme . [(20141014 1929) ((emacs (24 0))) "an overtly purple color theme for Emacs24." single ((:commit . "3e245cbef7cd09e6b3ee124963e372a04e9a6485") (:url . "https://github.com/jasonm23/emacs-purple-haze-theme"))]) (railscasts-theme . [(20150219 725) nil "Railscasts color theme for GNU Emacs." single ((:commit . "1340c3f6c2717761cab95617cf8dcbd962b1095b") (:url . "https://github.com/mikenichols/railscasts-theme") (:keywords "railscasts" "color" "theme"))]) (rebecca-theme . [(20170730 943) ((emacs (24))) "Rebecca Purple Theme" single ((:commit . "add349748d0f648587bf17d14036677570f081aa") (:url . "https://github.com/vic/rebecca-theme") (:keywords "theme" "dark"))]) (reverse-theme . [(20141204 1745) nil "Reverse theme for Emacs" single ((:commit . "8319d0d5342890a3530ffa4daafdb7c35feda1ca") (:url . "https://github.com/syohex/emacs-reverse-theme"))]) (seti-theme . [(20161208 836) nil "A dark colored theme, inspired by Seti Atom Theme" single ((:commit . "cbfef2fc15d19ce4c8326e65fafdd61737077132") (:url . "https://github.com/caisah/seti-theme") (:keywords "themes"))]) (smyx-theme . [(20141127 28) nil "smyx Color Theme" single ((:commit . "6263f6b401bbabaed388c8efcfc0be2e58c51401") (:keywords "color" "theme" "smyx"))]) (soft-charcoal-theme . [(20140420 943) nil "Dark charcoal theme with soft colors" single ((:commit . "5607ab977fae6638e78b1495e02da8955c9ba19f") (:url . "http://github.com/mswift42/soft-charcoal-theme"))]) (soft-morning-theme . [(20150918 1341) nil "Emacs24 theme with a light background." single ((:commit . "c0f9c70c97ef2be2a093cf839c4bfe27740a111c") (:url . "http://github.com/mswift42/soft-morning-theme"))]) (soft-stone-theme . [(20140614 135) ((emacs (24))) "Emacs 24 theme with a light background." single ((:commit . "fb475514cfb02cf30ce358a61c48e46614344d48") (:url . "http://github.com/mswift42/soft-stone-theme"))]) (solarized-theme . [(20170924 1440) ((emacs (24 1)) (cl-lib (0 5)) (dash (2 6 0))) "The Solarized color theme, ported to Emacs." tar ((:commit . "a2595627a793c57fa904ac210a6ca07fe1fef656"))]) (soothe-theme . [(20141027 741) ((emacs (24 1))) "a dark colorful theme for Emacs24." single ((:commit . "0786fe70c6c1b4ddcfb932fdc6862b9611cfc09b") (:url . "https://github.com/jasonm23/emacs-soothe-theme"))]) (spacegray-theme . [(20150719 1231) ((emacs (24 1))) "A Hyperminimal UI Theme" single ((:commit . "7f70ee36297e5ccf9bc90b1f81472024f5a7a749") (:url . "http://github.com/bruce/emacs-spacegray-theme") (:keywords "themes"))]) (subatomic-theme . [(20160126 738) nil "Low contrast bluish color theme" single ((:commit . "6a4086af748b1ecb27f6ba2aa2614988db16d594") (:url . "https://github.com/cryon/subatomic") (:keywords "color-theme" "blue" "low contrast"))]) (subatomic256-theme . [(20130620 1910) nil "Fork of subatomic-theme for terminals." single ((:commit . "326177d6f99cd2b1d30df695e67ee3bc441cd96f") (:url . "https://github.com/cryon/subatomic256"))]) (sublime-themes . [(20170606 1144) nil "A collection of themes based on Sublime Text" tar ((:commit . "60ee40af82eb55b79d5ed4026f1911326311603f") (:keywords "faces"))]) (sunny-day-theme . [(20140413 1425) nil "Emacs24 theme with a light background." single ((:commit . "420e0a6eb33fcc9b75c2c9e88ab60a975d782a00") (:url . "http://github.com/mswift42/sunny-day-theme"))]) (tango-2-theme . [(20120312 1325) nil "Tango 2 color theme for GNU Emacs 24" single ((:commit . "64e44c98e41ebbe3b827d54280e3b9615787daaa"))]) (tango-plus-theme . [(20170214 908) nil "A color theme based on the tango palette" single ((:commit . "8ba8901397e3e9f1d53110487bfa0effc65015e7") (:url . "https://github.com/tmalsburg/tango-plus-theme"))]) (tangotango-theme . [(20170924 809) nil "Tango Palette color theme for Emacs 24." single ((:commit . "e2f2ea9c35f06dfc43a29c91c14cf0cdb19f2144") (:url . "https://github.com/juba/color-theme-tangotango") (:keywords "tango" "palette" "color" "theme" "emacs"))]) (tao-theme . [(20170718 2306) nil "This package provides two parametrized uncoloured color themes for Emacs: tao-yin and tao-yang." tar ((:commit . "321dad4278776b63f8dcd1e67ad387531c472ed4"))]) (toxi-theme . [(20160424 1426) ((emacs (24))) "A dark color theme by toxi" single ((:url . "http://bitbucket.org/postspectacular/toxi-theme/"))]) (twilight-anti-bright-theme . [(20160622 148) nil "A soothing Emacs 24 light-on-dark theme" single ((:commit . "523b95fcdbf4a6a6483af314ad05354a3d80f23f") (:url . "https://github.com/jimeh/twilight-anti-bright-theme.el") (:keywords "themes"))]) (twilight-bright-theme . [(20130605 143) nil "A Emacs 24 faces port of the TextMate theme" single ((:commit . "322157cb2f3bf7920ecd209dafc31bc1c7959f49") (:url . "https://github.com/jimeh/twilight-bright-theme.el") (:keywords "themes"))]) (twilight-theme . [(20120412 603) nil "Twilight theme for GNU Emacs 24 (deftheme)" single ((:commit . "77c4741cb3dcf16e53d06d6c2ffdc660c40afb5b"))]) (ujelly-theme . [(20170905 1505) nil "Ujelly theme for GNU Emacs 24 (deftheme)" single ((:commit . "d08fe8e01db6df151b38c3001fba239a9a22369a") (:url . "http://github.com/marktran/color-theme-ujelly"))]) (underwater-theme . [(20131117 1602) nil "A gentle, deep blue color theme" single ((:commit . "4eb9ef014f580adc135d91d1cd68d37a310640b6") (:keywords "faces"))]) (white-sand-theme . [(20151117 848) ((emacs (24))) "Emacs theme with a light background." single ((:commit . "97621edd69267dd143760d94393db2c2558c9ea4"))]) (zen-and-art-theme . [(20120622 737) nil "zen and art color theme for GNU Emacs 24" single ((:commit . "a7226cbce0bca2501d69a620cb2aeabfc396c232"))]) (ucs-utils . [(20150826 714) ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) "Utilities for Unicode characters" tar ((:commit . "cbfd42f822bf5717934fa2d92060e6e24a813433") (:url . "http://github.com/rolandwalker/ucs-utils") (:keywords "i18n" "extensions"))]) (font-utils . [(20150806 1051) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" single ((:commit . "9192d3f8ee6a4e75f34c3fed10378674cc2b11d3") (:url . "http://github.com/rolandwalker/font-utils") (:keywords "extensions"))]) (unicode-fonts . [(20150826 1532) ((font-utils (0 7 8)) (ucs-utils (0 8 2)) (list-utils (0 4 2)) (persistent-soft (0 8 10)) (pcache (0 3 1))) "Configure Unicode fonts" single ((:commit . "a36597d83e0248bd0e6b2c1d5fb95bff72add527") (:url . "http://github.com/rolandwalker/unicode-fonts") (:keywords "i18n" "faces" "frames" "wp" "interface"))]) (list-utils . [(20160414 702) nil "List-manipulation utility functions" single ((:commit . "acf18aca1131a90f8d673974673e3c5d8fdc6a86") (:url . "http://github.com/rolandwalker/list-utils") (:keywords "extensions"))]) (pcache . [(20170105 1414) ((eieio (1 3))) "persistent caching for Emacs." single ((:commit . "025ef2411fa1bf82a9ac61dfdb7bd4cedaf2d740"))]) (persistent-soft . [(20150223 1053) ((pcache (0 3 1)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" single ((:commit . "a1e0ddf2a12a6f18cab565dee250f070384cbe02") (:url . "http://github.com/rolandwalker/persistent-soft") (:keywords "data" "extensions"))]) (mu4e-alert . [(20170901 1027) ((alert (1 2)) (s (1 10 0)) (ht (2 0)) (emacs (24 1))) "Desktop notification for mu4e" single ((:commit . "ef90cd0f0fb6c841f326db5cad276567eb5f96b5") (:url . "https://github.com/iqbalansari/mu4e-alert") (:keywords "mail" "convenience"))]) (mu4e-maildirs-extension . [(20170217 40) ((dash (0 0 0))) "Show mu4e maildirs summary in mu4e-main-view" single ((:commit . "485438c466464fd4fe0c4b3305cd3110455f0f05") (:url . "http://github.com/agpchil/mu4e-maildirs-extension"))]) (pandoc-mode . [(20170720 127) ((hydra (0 10 0)) (dash (2 10 0))) "Minor mode for interacting with Pandoc" tar ((:commit . "58f893d54c0916ad832097a579288ef8ce405da5") (:keywords "text" "pandoc"))]) (org . [(20171023) nil "Outline-based notes management and organizer" tar nil]) (ox-pandoc . [(20170829 1658) ((org (8 2)) (emacs (24)) (dash (2 8)) (ht (2 0)) (cl-lib (0 5))) "org exporter for pandoc." single ((:commit . "63a1e2b39049a95f6ad7f599561bcfea45086bc2") (:url . "https://github.com/kawabata/ox-pandoc") (:keywords "tools"))]) (ycmd . [(20171012 1610) ((emacs (24 4)) (dash (2 13 0)) (s (1 11 0)) (deferred (0 5 1)) (cl-lib (0 6 1)) (let-alist (1 0 5)) (request (0 3 0)) (request-deferred (0 3 0)) (pkg-info (0 6))) "emacs bindings to the ycmd completion server" tar ((:commit . "f31894da73c2b784bc9e0885ddfa6e1077782417") (:url . "https://github.com/abingham/emacs-ycmd"))]) (flycheck . [(20171026 610) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "On-the-fly syntax checking" tar ((:commit . "0d982b2860927a03e4cdf663750bd3b4c128918a") (:url . "http://www.flycheck.org") (:keywords "convenience" "languages" "tools"))]) (request-deferred . [(20160419 1605) ((deferred (0 3 1)) (request (0 2 0))) "Wrap request.el by deferred" single ((:commit . "a3d080e57eb8be606fbf39d1baff94e1b16e1fb8"))]) (deferred . [(20170901 630) ((emacs (24 4))) "Simple asynchronous functions for emacs lisp" single ((:commit . "2239671d94b38d92e9b28d4e12fd79814cfb9c16") (:url . "https://github.com/kiwanami/emacs-deferred") (:keywords "deferred" "async"))]) (flycheck-ycmd . [(20170614 1434) ((emacs (24)) (dash (2 13 0)) (flycheck (0 22)) (ycmd (1 2)) (let-alist (1 0 5))) "flycheck integration for ycmd" single ((:commit . "f31894da73c2b784bc9e0885ddfa6e1077782417") (:url . "https://github.com/abingham/emacs-ycmd"))]) (bm . [(20170815 1609) nil "Visible bookmarks in buffer." tar ((:commit . "b1bc10b1e9f01c48a7eedb9b08a22d05e7baed3c") (:url . "https://github.com/joodland/bm") (:keywords "bookmark" "highlight" "faces" "persistent"))]) (with-editor . [(20171006 352) ((emacs (24 4)) (async (1 9))) "Use the Emacsclient as $EDITOR" tar ((:commit . "6147262595cbc1a65220a5b8a9b23bf54dfb2171") (:url . "https://github.com/magit/with-editor") (:keywords "tools"))]) (password-store . [(20170829 1633) ((emacs (24)) (f (0 11 0)) (s (1 9 0)) (with-editor (2 5 11))) "Password store (pass) support" single ((:commit . "7252e8b3cf829e908179913daad16ff2b8bdefdd") (:url . "https://www.passwordstore.org/") (:keywords "tools" "pass" "password" "password-store"))]) (systemd . [(20171006 1352) ((emacs (24 4))) "Major mode for editing systemd units" tar ((:commit . "22f024fe8f433af7b6a6b99520cea1e766894fe5") (:keywords "tools" "unix"))]) (spray . [(20160304 1420) nil "a speed reading mode" single ((:commit . "df326991acb2bd64af373bcf09816df9c6424d0d") (:url . "https://github.com/ian-kelling/spray") (:keywords "convenience"))]) (mmm-jinja2 . [(20170313 720) ((mmm-mode (0 5 4))) "MMM submode class for Jinja2 Templates" single ((:commit . "c8cb763174fa2fb61b9a0e5e0ff8cb0210f8492f") (:url . "https://github.com/glynnforrest/mmm-jinja2"))]) (yaml-mode . [(20170727 1531) ((emacs (24 1))) "Major mode for editing YAML files" single ((:commit . "28c34033194130d452d5c958b5241c88d42ca02b") (:keywords "data" "yaml"))]) (mmm-mode . [(20171004 336) nil "Allow Multiple Major Modes in a buffer" tar ((:commit . "7661968fa6974996e58dfa28da33bca0cbde777d") (:url . "https://github.com/purcell/mmm-mode") (:keywords "convenience" "faces" "languages" "tools"))]) (salt-mode . [(20170702 246) ((emacs (24 4)) (yaml-mode (0 0 12)) (mmm-mode (0 5 4)) (mmm-jinja2 (0 1))) "Major mode for Salt States" single ((:commit . "a41c07660199cfad3f9dd928d5674d2727508035") (:url . "https://github.com/glynnforrest/salt-mode") (:keywords "languages"))]) (command-log-mode . [(20160412 2147) nil "log keyboard commands to buffer" single ((:commit . "af600e6b4129c8115f464af576505ea8e789db27") (:url . "https://github.com/lewang/command-log-mode") (:keywords "help"))]) (rebox2 . [(20121113 500) nil "Handling of comment boxes in various styles." single ((:commit . "00634eca420cc48657b81e40e599ff8548083985") (:url . "https://github.com/lewang/rebox2"))]) (edit-server . [(20170725 859) nil "server that responds to edit requests from Chrome" single ((:commit . "462c57be72b3a8652f705bde0d3b7cd2f79644fa") (:url . "https://github.com/stsquad/emacs_chrome"))]) (ham-mode . [(20150811 606) ((html-to-markdown (1 2)) (markdown-mode (2 0))) "Html As Markdown. Transparently edit an html file using markdown" single ((:commit . "3a141986a21c2aa6eefb428983352abb8b7907d2") (:url . "http://github.com/Bruce-Connor/ham-mode") (:keywords "convenience" "emulation" "wp"))]) (markdown-mode . [(20171022 1736) ((emacs (24)) (cl-lib (0 5))) "Major mode for Markdown-formatted text" single ((:commit . "c25f394449c80acc63557b7689518b5c1db875d2") (:url . "https://jblevins.org/projects/markdown-mode/") (:keywords "markdown" "github flavored markdown" "itex"))]) (html-to-markdown . [(20151105 40) ((cl-lib (0 5))) "HTML to Markdown converter written in Emacs-lisp." single ((:commit . "60c5498c801be186478cf7c05be05b4430c4a144") (:url . "http://github.com/Bruce-Connor/html-to-markdown") (:keywords "tools" "wp" "languages"))]) (gmail-message-mode . [(20160627 1147) ((ham-mode (1 0))) "A major-mode for editing gmail messages using markdown syntax." single ((:commit . "ec36672a9dc93c09ebe2f77597b498d11883d008") (:url . "http://github.com/Bruce-Connor/gmail-message-mode") (:keywords "mail" "convenience" "emulation"))]) (flymd . [(20160617 514) ((cl-lib (0 5))) "On the fly markdown preview" tar ((:commit . "84d5a68bcfed4a295952c33ffcd11e880978d9d7") (:url . "https://github.com/mola-T/flymd") (:keywords "markdown" "convenience"))]) (osx-location . [(20150613 217) nil "Watch and respond to changes in geographical location on OS X" tar ((:commit . "8bb3a94cc9f04b922d2d730fe08596cc6ee12bf2"))]) (rase . [(20120928 1345) nil "Run At Sun Event daemon" single ((:commit . "59b5f7e8102570b65040e8d55781c7ea28de7338") (:url . "https://github.com/m00natic/rase/") (:keywords "solar" "sunrise" "sunset" "midday" "midnight"))]) (sunshine . [(20160410 1317) ((cl-lib (0 5))) "Provide weather and forecast information." single ((:commit . "11e49846a116bdec6e2e463bed2db4c2df9c8ad2") (:url . "https://github.com/aaronbieber/sunshine.el") (:keywords "tools" "weather"))]) (theme-changer . [(20161130 1440) nil "Sunrise/Sunset Theme Changer for Emacs" single ((:commit . "60e3dd7cbd237225fef34179168006501a27b06b") (:url . "https://github.com/hadronzoo/theme-changer") (:keywords "color-theme" "deftheme" "solar" "sunrise" "sunset"))]) (dash-at-point . [(20140626 35) nil "Search the word at point with Dash" single ((:commit . "ed872b4fcbe02ef1a5bac0337afe19a7a747f34c") (:url . "https://github.com/stanaka/dash-at-point"))]) (helm-dash . [(20171017 342) ((helm (1 9 2)) (cl-lib (0 5))) "Offline documentation browser for +150 APIs using Dash docsets." single ((:commit . "2551469fb7faa1b7fdcbbcc3b143fdc8cab1ae66") (:url . "http://github.com/areina/helm-dash") (:keywords "docs"))]) (dash-functional . [(20171028 804) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single ((:commit . "91d8cb01e62bab0d6267d3d4dbcabd6da6fdea78") (:keywords "lisp" "functions" "combinators"))]) (counsel-dash . [(20160729 829) ((emacs (24 4)) (dash (2 12 1)) (dash-functional (1 2 0)) (helm-dash (1 3 0)) (counsel (0 8 0))) "Browse dash docsets using Ivy" single ((:commit . "07fa74a94ff4da5b6c8c4810f5e143e701b480d2") (:url . "https://github.com/nathankot/counsel-dash") (:keywords "dash" "ivy" "counsel"))]) (zeal-at-point . [(20170427 2042) nil "Search the word at point with Zeal" single ((:commit . "50a1bd4240ff0db7c8f2046c3b00c5a8e14b9d2f") (:url . "https://github.com/jinzhu/zeal-at-point"))]) (transmission . [(20171005 1043) ((emacs (24 4)) (let-alist (1 0 5))) "Interface to a Transmission session" single ((:commit . "c8be91596420ca8d79de44602d836aa6d1cbe2fc") (:keywords "comm" "tools"))]) (f . [(20170404 1039) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single ((:commit . "fabdbd4a4a8caf8684f0fa656f457a03c5dfa4de") (:url . "http://github.com/rejeep/f.el") (:keywords "files" "directories"))]) (s . [(20170922 900) nil "The long lost Emacs string manipulation library." single ((:commit . "12f116d58ac03706496bd682c6449b452681874e") (:keywords "strings"))]) (prodigy . [(20170816 1114) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" single ((:commit . "94d4d2870b86af1185e6395dabf15b3695846f38") (:url . "http://github.com/rejeep/prodigy.el"))]) (ob-cfengine3 . [(20170915 634) nil "Org Babel functions for CFEngine 3" single ((:commit . "9cdcfe1d3574a008d26a1e2d3e1c61808fb16227") (:url . "https://github.com/nickanderson/ob-cfengine3") (:keywords "tools" "convenience"))]) (puppet-mode . [(20170928 1007) ((emacs (24 1)) (pkg-info (0 4))) "Major mode for Puppet manifests" single ((:commit . "e04f041386ebfe29fc67c3407e85b577b820df4f") (:url . "https://github.com/voxpupuli/puppet-mode") (:keywords "languages"))]) (fasd . [(20161216 831) nil "Emacs integration for the command-line productivity booster `fasd'" single ((:commit . "5940b84dfa1ea7225b740d3a8dd215290d964873") (:url . "https://github.com/steckerhalter/emacs-fasd") (:keywords "cli" "bash" "zsh" "autojump"))]) (deft . [(20160610 1739) nil "quickly browse, filter, and edit plain text notes" single ((:commit . "86825cd420985112d9dd38060e0edb72b08c6dab") (:url . "http://jblevins.org/projects/deft/") (:keywords "plain text" "notes" "simplenote" "notational velocity"))]) (let-alist . [(1 0 5) ((emacs (24 1))) "Easily let-bind values of an assoc-list by their names" single ((:url . "http://elpa.gnu.org/packages/let-alist.html") (:keywords "extensions" "lisp"))]) (tablist . [(20170219 1935) ((emacs (24 3))) "Extended tabulated-list-mode" tar ((:commit . "c834a84efb6efa32497efe1e73160fade741b836") (:keywords "extensions" "lisp"))]) (pdf-tools . [(20171012 2226) ((emacs (24 3)) (tablist (0 70)) (let-alist (1 0 4))) "Support library for PDF documents." tar ((:commit . "094b2931de775c734ad353c5d06cf5fc6a55f11d") (:keywords "files" "multimedia"))]) (pyim-basedict . [(20170726 1959) nil "The default pinyin dict of pyim" tar ((:commit . "3196cb210e056702c5a4ea1dac1d8e1e27740fab") (:url . "https://github.com/tumashu/pyim-basedict") (:keywords "convenience" "chinese" "pinyin" "input-method" "complete"))]) (pyim . [(20170916 2024) ((emacs (24 3)) (cl-lib (0 5)) (pos-tip (0 4)) (popup (0 1)) (async (1 6)) (pyim-basedict (0 1))) "A Chinese input method which support quanpin, shuangpin, wubi and cangjie." tar ((:commit . "d44db4cb74c1c0cf6f814ff14d0be8e733f8404a") (:url . "https://github.com/tumashu/pyim") (:keywords "convenience" "chinese" "pinyin" "input-method"))]) (chinese-wbim . [(20150623 2050) nil "Enable Wubi Input Method in Emacs." tar ((:commit . "57ff61ff3895d77335709d24b40cefc4d10b0095"))]) (fcitx . [(20170913 1900) nil "Make fcitx better in Emacs" single ((:commit . "095332fbeb994c908c533fe2ad068c0728211c3d") (:url . "https://github.com/cute-jumper/fcitx.el") (:keywords "extensions"))]) (find-by-pinyin-dired . [(20170206 208) ((pinyinlib (0 1 0))) "Find file by first PinYin character of Chinese Hanzi" single ((:commit . "2c48434637bd63840fca4d2c6cf9ebd5dd44658f") (:url . "http://github.com/redguardtoo/find-by-pinyin-dired") (:keywords "hanzi" "chinese" "dired" "find" "file" "pinyin"))]) (pinyinlib . [(20170827 1442) nil "Convert first letter of Pinyin to Simplified/Traditional Chinese characters" single ((:commit . "45f05d3dbb4fe957f7ab332ca6f94675848b6aa3") (:keywords "extensions"))]) (avy . [(20171014 20) ((emacs (24 1)) (cl-lib (0 5))) "tree-based completion" single ((:commit . "36f768d9e320d300b81799e0fcc097cb89aad780") (:url . "https://github.com/abo-abo/avy") (:keywords "point" "location"))]) (ace-pinyin . [(20170430 2326) ((avy (0 2 0)) (pinyinlib (0 1 0))) "Jump to Chinese characters using avy or ace-jump-mode" single ((:commit . "a9df88c1e6a32a4f4895acbb8c45383693c494c1") (:url . "https://github.com/cute-jumper/ace-pinyin") (:keywords "extensions"))]) (pangu-spacing . [(20170317 157) nil "Minor-mode to add space between Chinese and English characters." single ((:commit . "a4463dbb74abdeddb6c1c132a1f8fcf67ed87498") (:url . "http://github.com/coldnew/pangu-spacing"))]) (names . [(20171012 1214) ((emacs (24 1)) (cl-lib (0 5))) "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar ((:commit . "1d45ec50568eb2f5b55973f7ed0b48c68f9f13aa") (:url . "https://github.com/Malabarba/names") (:keywords "extensions" "lisp"))]) (chinese-word-at-point . [(20170811 241) ((cl-lib (0 5))) "Add `chinese-word' thing to `thing-at-point'" single ((:commit . "8223d7439e005555b86995a005b225ae042f0538") (:url . "https://github.com/xuchunyang/chinese-word-at-point.el") (:keywords "convenience" "chinese"))]) (pos-tip . [(20150318 813) nil "Show tooltip at point" single ((:commit . "051e08fec5cf30b7574bdf439f79fef7d42d689d") (:keywords "tooltip"))]) (youdao-dictionary . [(20170226 49) ((popup (0 5 0)) (pos-tip (0 4 6)) (chinese-word-at-point (0 2)) (names (0 5)) (emacs (24))) "Youdao Dictionary interface for Emacs" single ((:commit . "44548f56a1c736e6a7fae4546657bff0a94bf3cb") (:url . "https://github.com/xuchunyang/youdao-dictionary.el") (:keywords "convenience" "chinese" "dictionary"))]) (neotree . [(20170522 758) ((cl-lib (0 5))) "A tree plugin like NerdTree for Vim" tar ((:commit . "bc98dfb44c106375efa4f26848f3790ee264da97") (:url . "https://github.com/jaypei/emacs-neotree"))]) (company . [(20171017 1638) ((emacs (24 3))) "Modular text completion framework" tar ((:commit . "66e43a3a3388c3af3dd851ba0a1f48dcb6efb1ae") (:url . "http://company-mode.github.io/") (:keywords "abbrev" "convenience" "matching"))]) (company-nixos-options . [(20160215 57) ((company (0 8 0)) (nixos-options (0 0 1)) (cl-lib (0 5 0))) "Company Backend for nixos-options" single ((:commit . "7007363e773a419203a69798fb0e0731b2eb0f73") (:url . "http://www.github.com/travisbhartwell/nix-emacs/") (:keywords "unix"))]) (helm . [(20171028 246) ((emacs (24 4)) (async (1 9 2)) (popup (0 5 3)) (helm-core (2 8 5))) "Helm is an Emacs incremental and narrowing framework" tar ((:commit . "ece8972b50ff72cbd58dfb5a6628f8f72c9bcb8c") (:url . "https://emacs-helm.github.io/helm/"))]) (helm-core . [(20171028 558) ((emacs (24 4)) (async (1 9 2))) "Development files for Helm" tar ((:commit . "ffd2abf5c4bdfc998c09730387b11d2bf9ac1032") (:url . "https://emacs-helm.github.io/helm/"))]) (popup . [(20160709 729) ((cl-lib (0 5))) "Visual Popup User Interface" single ((:commit . "80829dd46381754639fb764da11c67235fe63282") (:keywords "lisp"))]) (async . [(20171015 2239) nil "Asynchronous processing in Emacs" tar ((:commit . "424ecd8a28cd59fe7d2de3cb4b37a4224e34c123") (:keywords "async") (:url . "https://github.com/jwiegley/emacs-async"))]) (helm-nixos-options . [(20151013 1609) ((nixos-options (0 0 1)) (helm (1 5 6))) "Helm Interface for nixos-options" single ((:commit . "7007363e773a419203a69798fb0e0731b2eb0f73") (:url . "http://www.github.com/travisbhartwell/nix-emacs/") (:keywords "unix"))]) (nix-mode . [(20170831 1721) ((emacs (24 3))) "Major mode for editing .nix files" single ((:commit . "eb7623fb3b23afec25619a76adab6bab5e338bf2") (:url . "https://github.com/matthewbauer/nix-mode") (:keywords "nix" "languages" "tools" "unix"))]) (nixos-options . [(20160209 1041) ((emacs (24))) "Interface for browsing and completing NixOS options." single ((:commit . "7007363e773a419203a69798fb0e0731b2eb0f73") (:url . "http://www.github.com/travisbhartwell/nix-emacs/") (:keywords "unix"))]) (selectric-mode . [(20170216 311) nil "IBM Selectric mode for Emacs" tar ((:commit . "a35cb3815caceaf273ad7d16ac3b2dd3c7a3003e") (:url . "https://github.com/rbanffy/selectric-mode") (:keywords "multimedia" "convenience" "typewriter" "selectric"))]) (xkcd . [(20160419 430) ((json (1 3))) "View xkcd from Emacs" single ((:commit . "66e928706fd660cfdab204c98a347b49c4267bdf") (:url . "https://github.com/vibhavp/emacs-xkcd") (:keywords "xkcd" "webcomic"))]) (rcirc-color . [(0 3) nil "color nicks" single ((:url . "http://elpa.gnu.org/packages/rcirc-color.html") (:keywords "comm"))]) (rcirc-notify . [(20150219 1404) nil "libnotify popups" single ((:commit . "841a7b5a6cdb0c11a812df924d2c6a7d364fd455") (:keywords "lisp" "rcirc" "irc" "notify" "growl"))]) (fsm . [(0 2 1) ((emacs (24 1)) (cl-lib (0 5))) "state machine library" single ((:url . "http://elpa.gnu.org/packages/fsm.html") (:keywords "extensions"))]) (jabber . [(20170106 1603) ((fsm (0 2))) "A Jabber client for Emacs." tar ((:commit . "2ef76cff4a5a932cf17dc6107a0c5adee806081e"))]) (emojify . [(20171018 744) ((seq (1 11)) (ht (2 0)) (emacs (24 3))) "Display emojis in Emacs" tar ((:commit . "001c3adcc521223f6b53a2243635528b2cb7f7e8") (:url . "https://github.com/iqbalansari/emacs-emojify") (:keywords "multimedia" "convenience"))]) (alert . [(20171024 1907) ((gntp (0 1)) (log4e (0 3 0))) "Growl-style notification system for Emacs" single ((:commit . "206d7095c93a25bb41af17cd26fd3967ddd57e00") (:url . "https://github.com/jwiegley/alert") (:keywords "notification" "emacs" "message"))]) (circe . [(20170929 1635) ((cl-lib (0 5))) "Client for IRC in Emacs" tar ((:commit . "59f1096238e6c30303a6fe9fc1c635f49e5946c6") (:url . "https://github.com/jorgenschaefer/circe"))]) (oauth2 . [(0 11) nil "OAuth 2.0 Authorization Protocol" single ((:url . "http://elpa.gnu.org/packages/oauth2.html") (:keywords "comm"))]) (request . [(20170131 1747) ((emacs (24 4))) "Compatible layer for URL request in Emacs" single ((:commit . "a3d080e57eb8be606fbf39d1baff94e1b16e1fb8"))]) (websocket . [(20170829 457) ((cl-lib (0 5))) "Emacs WebSocket client and server" single ((:commit . "33d0406901f7306b326928190b6ad94247d01a5f") (:keywords "communication" "websocket" "server"))]) (log4e . [(20170401 604) nil "provide logging framework for elisp" single ((:commit . "34309972ad02abcebbcff6b1682731978aef030c") (:url . "https://github.com/aki2o/log4e") (:keywords "log"))]) (gntp . [(20141024 1950) nil "Growl Notification Protocol for Emacs" single ((:commit . "767571135e2c0985944017dc59b0be79af222ef5"))]) (ht . [(20171024 1200) ((dash (2 12 0))) "The missing hash table library for Emacs" single ((:commit . "a741bac82797d25ec0542764df7443e9e7241033") (:keywords "hash table" "hash map" "hash"))]) (seq . [(2 20) nil "Sequence manipulation functions" tar ((:keywords "sequences") (:url . "http://elpa.gnu.org/packages/seq.html"))]) (slack . [(20171017 822) ((websocket (1 8)) (request (0 2 0)) (oauth2 (0 10)) (circe (2 2)) (alert (1 2)) (emojify (0 2))) "Slack client for Emacs" tar ((:commit . "c8f4c3312b574b8f4cd5ddaaa6ec7710893a9ff0") (:url . "https://github.com/yuya373/emacs-slack"))]) (erc-terminal-notifier . [(20140115 224) nil "OSX notifications via the terminal-notifier gem for Emacs ERC." single ((:commit . "a3dacb935845e4a20031212bbd82b2170f68d2a8") (:url . "http://github.com/julienXX/") (:keywords "erc" "terminal-notifier" "nick"))]) (erc-hl-nicks . [(20160202 1150) nil "ERC nick highlighter that ignores uniquifying chars when colorizing" single ((:commit . "be181920ce6af0ab5d00d1c638e4e598b3998643") (:url . "http://www.github.com/leathekd/erc-hl-nicks"))]) (erc-image . [(20170909 312) nil "Show received image urls in the ERC buffer" single ((:commit . "15805aa7ed4b13eeaaa4ec294443ef0f9d21c0c2") (:keywords "multimedia"))]) (erc-social-graph . [(20150508 504) nil "A social network graph module for ERC." single ((:commit . "e6ef3416a1c5064054bf054d9f0c1c7bf54a9cd0") (:url . "https://github.com/vibhavp/erc-social-graph") (:keywords "erc" "graph"))]) (erc-view-log . [(20140227 1239) nil "Major mode for viewing ERC logs" single ((:commit . "c5a25f0cbca84ed2e4f72068c02b66bd0ea3b266") (:url . "http://github.com/Niluge-KiWi/erc-view-log/raw/master/erc-view-log.el") (:keywords "erc" "viewer" "logs" "colors"))]) (erc-yt . [(20150426 549) ((dash (2 10 0))) "An erc module to display youtube links nicely" single ((:commit . "43e7d49325b17a3217a6ffb4a9daf75c5ff4e6f8") (:keywords "multimedia"))]) (nlinum . [(1 8) nil "Show line numbers in the margin" single ((:url . "http://elpa.gnu.org/packages/nlinum.html") (:keywords "convenience"))]) (nlinum-relative . [(20160526 8) ((emacs (24 4)) (nlinum (1 5))) "Relative line number with nlinum" single ((:commit . "5b9950c97ba79a6f0683e38b13da23f39e01031c") (:keywords "convenience"))]) (projectile . [(20171009 848) ((emacs (24 1)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single ((:commit . "dd48cb8af4cf41d109fb6d46f0c3f2134f37fcfb") (:url . "https://github.com/bbatsov/projectile") (:keywords "project" "convenience"))]) (counsel . [(20171028 1043) ((emacs (24 3)) (swiper (0 9 0))) "Various completion functions using Ivy" single ((:commit . "9e56a92868e5eb8d7c6fd6d68157e144ac6b508f") (:url . "https://github.com/abo-abo/swiper") (:keywords "completion" "matching"))]) (swiper . [(20170926 937) ((emacs (24 1)) (ivy (0 9 0))) "Isearch with an overview. Oh, man!" single ((:commit . "9e56a92868e5eb8d7c6fd6d68157e144ac6b508f") (:url . "https://github.com/abo-abo/swiper") (:keywords "matching"))]) (pkg-info . [(20150517 443) ((epl (0 8))) "Information about packages" single ((:commit . "76ba7415480687d05a4353b27fea2ae02b8d9d61") (:url . "https://github.com/lunaryorn/pkg-info.el") (:keywords "convenience"))]) (epl . [(20150517 433) ((cl-lib (0 3))) "Emacs Package Library" single ((:commit . "83797835f729f39b80acba4c7e83d73a2e410e26") (:url . "http://github.com/cask/epl") (:keywords "convenience"))]) (counsel-projectile . [(20171001 641) ((counsel (0 8 0)) (projectile (0 14 0))) "Ivy integration for Projectile" single ((:commit . "88a16cb75301ae95f21a71e8838a49590d011e73") (:url . "https://github.com/ericdanan/counsel-projectile") (:keywords "project" "convenience"))]) (flx . [(20151030 1112) ((cl-lib (0 3))) "fuzzy matching with good sorting" single ((:commit . "ae0981b253b17b52dec666e2f739f889e7952291") (:url . "https://github.com/lewang/flx"))]) (hydra . [(20170924 2259) ((cl-lib (0 5))) "Make bindings that stick around." tar ((:commit . "df3025f7e3cf3899168ae8ced1e9b734df2b32a0") (:url . "https://github.com/abo-abo/hydra") (:keywords "bindings"))]) (ivy . [(20171027 1300) ((emacs (24 1))) "Incremental Vertical completYon" tar ((:commit . "c6287a77c13747c0e6cb364a2be7342d08d24eb5") (:url . "https://github.com/abo-abo/swiper") (:keywords "matching"))]) (ivy-hydra . [(20170703 2350) ((emacs (24 1)) (ivy (0 9 0)) (hydra (0 13 4))) "Additional key bindings for Ivy" single ((:commit . "9e56a92868e5eb8d7c6fd6d68157e144ac6b508f") (:url . "https://github.com/abo-abo/swiper") (:keywords "completion" "matching" "bindings"))]) (smex . [(20151212 1409) ((emacs (24))) "M-x interface with Ido-style fuzzy matching." single ((:commit . "55aaebe3d793c2c990b39a302eb26c184281c42c") (:url . "http://github.com/nonsequitur/smex/") (:keywords "convenience" "usability"))]) (wgrep . [(20141016 1656) nil "Writable grep buffer and apply the changes to files" single ((:commit . "1cdd7c136f1e7565bb13d2df69be3dc77b83698d") (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep.el") (:keywords "grep" "edit" "extensions"))]) (highlight . [(20170702 732) nil "Highlighting commands." single ((:url . "https://www.emacswiki.org/emacs/download/highlight.el") (:keywords "faces" "help" "local"))]) (floobits . [(20170802 1500) ((json (1 2)) (highlight (0))) "Floobits plugin for real-time collaborative editing" tar ((:commit . "ed5586d1bf94f36354091648e824ccb6fcaf807f") (:url . "http://github.com/Floobits/floobits-emacs") (:keywords "comm" "tools"))]) (mwim . [(20161004 647) nil "Switch between the beginning/end of line or code" single ((:commit . "e53da113b88a7e0693fd8f91862ce5948ad80a5b") (:url . "https://github.com/alezost/mwim.el") (:keywords "convenience"))]) (unfill . [(20170722 1846) nil "Unfill paragraphs or regions, and toggle between filled & unfilled" single ((:commit . "df0c4dee19a3874b11c7c7f04e8a2fba629fda9b") (:url . "https://github.com/purcell/unfill") (:keywords "utilities"))]) (evil-commentary . [(20170413 751) ((evil (1 0 0))) "Comment stuff out. A port of vim-commentary." tar ((:commit . "395f91014b69844b81660c155f42eb9b1b3d199d") (:url . "http://github.com/linktohack/evil-commentary") (:keywords "evil" "comment" "commentary" "evil-commentary"))]) (powerline . [(20171023 750) ((cl-lib (0 2))) "Rewrite of Powerline" tar ((:commit . "fda4fb96984607d4a6502b1d8c8898e56d10cf6c") (:url . "http://github.com/milkypostman/powerline/") (:keywords "mode-line"))]) (vim-empty-lines-mode . [(20150110 2026) ((emacs (23))) "Vim-like empty line indicator at end of files." single ((:commit . "d4a5034ca8ea0c962ad6e92c86c0fa2a74d2964b") (:url . "https://github.com/jmickelin/vim-empty-lines-mode") (:keywords "emulations"))]) (smartparens . [(20171021 718) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar ((:commit . "cdd10bc259fe7303e40efd8a6a05c7e43d12a242"))]) (paredit . [(20170405 1149) nil "minor mode for editing parentheses" single ((:commit . "99829aa423c9e8dd1be8d64c4b68982cf4c1559b") (:keywords "lisp"))]) (evil . [(20171028 503) ((emacs (24 1)) (undo-tree (0 6 3)) (goto-chg (1 6)) (cl-lib (0 5))) "Extensible Vi layer for Emacs." tar ((:commit . "414138d253403ab386cd3048271e1e19da175efe"))]) (goto-chg . [(20170917 1200) nil "goto last change" single ((:commit . "81fca94d2592cf32bab451c39a9cd2d9b03fbd6b") (:keywords "convenience" "matching"))]) (undo-tree . [(20170706 246) nil "Treat undo history as a tree" single ((:commit . "e9a9102f515acd7523158f20e83f300600374989") (:url . "http://www.dr-qubit.org/emacs.php") (:keywords "convenience" "files" "undo" "redo" "history" "tree"))]) (cl-lib . [(0 6 1) nil "Properly prefixed CL functions and macros" single ((:url . "http://elpa.gnu.org/packages/cl-lib.html") (:keywords))]) (dash . [(20171028 854) nil "A modern list library for Emacs" single ((:commit . "91d8cb01e62bab0d6267d3d4dbcabd6da6fdea78") (:keywords "lists"))]) (evil-cleverparens . [(20170717 2113) ((evil (1 0)) (paredit (1)) (smartparens (1 6 1)) (emacs (24 4)) (dash (2 12 0))) "Evil friendly minor-mode for editing lisp." tar ((:commit . "8c45879d49bfa6d4e414b6c1df700a4a51cbb869") (:url . "https://github.com/luxbock/evil-cleverparens") (:keywords "cleverparens" "parentheses" "evil" "paredit" "smartparens"))]))